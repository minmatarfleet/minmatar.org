---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'

import universal_support_fittings from '@/data/universal_support_fittings.json'

const { doctrine_id } = Astro.params;

import type { DoctrineType } from '@dtypes/layout_components'
import { fetch_doctrine_by_id } from '@helpers/fetching/doctrines'

let doctrine:DoctrineType
let fetch_doctrine_error:string | false = false

try {
    doctrine = await fetch_doctrine_by_id(parseInt(doctrine_id))
} catch (error) {
    fetch_doctrine_error = prod_error_messages() ? t('fetch_doctrine_error') : error.message
}

import Viewport from '@layouts/Viewport.astro';

import PageWide from '@components/page/PageWide.astro';
import PageTitle from '@components/page/PageTitle.astro';

import TextBox from '@components/layout/TextBox.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import FitItem from '@components/blocks/FitItem.astro';
import Button from '@components/blocks/Button.astro';

import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';

const page_title = `${doctrine.name} ${t('doctrine')}`;
---

<Viewport title={page_title}>
    <PageWide
        cover={{
            image: "/images/doctrines-cover.jpg",
            image_990: "/images/doctrines-cover-990.jpg",
            alt: t('doctrines.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
    >
        <FlexInline slot="header" justification='space-between' class="[ w-full ]">
            <FlexInline>
                <PageTitle>
                    {page_title}
                </PageTitle>
            </FlexInline>
            <FlexInline>
                <Button href={translatePath('/ships/doctrines/list')} class="[ !hidden md:!flex ]">
                    {t('keep_browsing')}
                </Button>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-xl)">
            <TextBox>
                <p>{doctrine.description}</p>
            </TextBox>
            
            <Flexblock gap="var(--space-3xs)" role="list">
                <!--<ItemList title={t('ideal_composition')} items={doctrine.ideal_composition} /> -->
                
                <Flexblock gap="var(--space-3xs)" role="list">
                    {doctrine.primary_fittings.map((fitting) =>
                        <FitItem
                            role="listitem"
                            class="[ fit-item ]"
                            fitting={fitting}
                        />
                    )}
                    {doctrine.secondary_fittings.map((fitting) =>
                        <FitItem
                            role="listitem"
                            class="[ fit-item ]"
                            fitting={fitting}
                        />
                    )}
                    {doctrine.support_fittings.map((fitting) =>
                        <FitItem
                            role="listitem"
                            class="[ fit-item ]"
                            fitting={fitting}
                        />
                    )}
                </Flexblock>
            </Flexblock>

            <TextBox>
                <p>{t('doctrine.support_fittings.description')}</p>
            </TextBox>

            <Flexblock gap="var(--space-3xs)" role="list">
                {universal_support_fittings.map((fitting) =>
                    <FitItem
                        role="listitem"
                        class="[ fit-item ]"
                        fitting={fitting}
                    />
                )}
            </Flexblock>

        </Flexblock>
    </PageWide>
</Viewport>