---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false

const doctrine_id = Astro.params.doctrine_id ?? '0';

import { prod_error_messages } from '@helpers/env'
import type { DoctrineType } from '@dtypes/layout_components'
import { fetch_doctrine_by_id } from '@helpers/fetching/doctrines'
import type { FleetItem } from '@dtypes/layout_components'
import { fetch_fleets_auth, fetch_fleets } from '@helpers/fetching/fleets'

let doctrine:DoctrineType | null = null
let fetch_doctrine_error:string | false = false
let recently_fleets:FleetItem[] | null = null

try {
    doctrine = await fetch_doctrine_by_id(parseInt(doctrine_id))

    if (auth_token) {
        recently_fleets = auth_token ? await fetch_fleets_auth(auth_token as string, false) : null
        recently_fleets = (recently_fleets ?? []).filter((fleet) => fleet.doctrine_id === parseInt(doctrine_id))
    }
} catch (error) {
    fetch_doctrine_error = prod_error_messages() ? t('fetch_doctrine_error') : error.message
}

const DOCTRINE_DETAILS_PARTIAL_URL = translatePath('/partials/doctrine_details_component')

import Viewport from '@layouts/Viewport.astro';

import PageWide from '@components/page/PageWide.astro';
import PageTitle from '@components/page/PageTitle.astro';

import FlexInline from '@components/compositions/FlexInline.astro';

import Button from '@components/blocks/Button.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
import DoctrineDetails from '@components/blocks/DoctrineDetails.astro';
import Flexblock from '@components/compositions/Flexblock.astro';

const page_title = `${doctrine?.name} ${t('doctrine')}`;
const page_description = doctrine?.description
---

<Viewport title={page_title} meta_description={page_description}>
    <PageWide
        cover={{
            image: "/images/doctrines-cover.jpg",
            image_990: "/images/doctrines-cover.jpg",
            animated: false,
            scrollable: true,
            overlay: true
        }}
        x-data={`{
            ideal_fleet_size: ${doctrine?.ideal_composition?.ideal_fleet_size ?? 0},
            recently_fleets_count: ${recently_fleets?.length},
        }`}
    >
        <FlexInline slot="header" justification='space-between' class="[ w-full ]">
            <Flexblock gap='var(--space-3xs)'>
                <PageTitle>
                    {page_title}
                </PageTitle>
                <small x-text={`\`\${ideal_fleet_size} ${t('ideal_fleet_size')}\``}>
                    {`${doctrine?.ideal_composition?.ideal_fleet_size ?? 0} ${t('ideal_fleet_size')}`}
                </small>
            </Flexblock>
            <FlexInline>
                <Button href={translatePath('/ships/doctrines/list')} class="[ !hidden md:!flex ]">
                    {t('keep_browsing')}
                </Button>
            </FlexInline>
        </FlexInline>

        {fetch_doctrine_error ?
            <ErrorRefetch
                args={{
                    partial: `${DOCTRINE_DETAILS_PARTIAL_URL}?doctrine_id=${doctrine_id}`,
                    message: fetch_doctrine_error,
                    delay: 0,
                }}
            />
            :
            <DoctrineDetails doctrine={doctrine as DoctrineType } recently_fleets={recently_fleets as FleetItem[]} />
        }
    </PageWide>
</Viewport>