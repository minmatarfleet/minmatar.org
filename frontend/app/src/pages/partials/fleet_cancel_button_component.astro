---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'
import { HTTP_403_Forbidden } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

if (!user)
    return HTTP_403_Forbidden()

import type { Alert } from '@dtypes/layout_components'
import { update_fleet } from '@helpers/api.minmatar.org/fleets'
import type { FleetPatchRequest } from '@dtypes/api.minmatar.org'

let alert:Alert | false = false

const fleet_id = parseInt(Astro.url.searchParams.get('fleet_id') as string)
let redirect:string | null = null

if (Astro.request.method === "PATCH") {
    let cancel_fleet_error:string | false = false

    try {
        const fleet_data = {
            status: 'cancelled'
        } as FleetPatchRequest
        
        await update_fleet(auth_token as string, fleet_data, fleet_id)
        
        redirect = translatePath(`/fleets/upcoming/${fleet_id}`)
    } catch (error) {
        cancel_fleet_error = (prod_error_messages() ? t('cancel_fleet_error') : error.message)
    }
    
    if (cancel_fleet_error) {
        alert = {
            title: t('cancel_fleet_dialog_title'),
            content: cancel_fleet_error,
        }
    }
}

import CancelFleetButton from '@components/blocks/CancelFleetButton.astro';
import ShowAlert from '@components/blocks/ShowAlert.astro'
---

{redirect &&
    <script define:vars={{ redirect }} is:inline>
        if (redirect) navigate(redirect)
    </script>
}

{alert && <ShowAlert alert={alert} />}

<CancelFleetButton fleet_id={fleet_id} />