---
import { i18n } from '@helpers/i18n'
const { lang, translatePath } = i18n(Astro.url)

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : null
const user_id = user?.user_id ?? null

import type { CorporationType } from '@dtypes/layout_components'
import { get_associates_data } from '@helpers/pages/associates'
import type { AssociatesData } from '@helpers/pages/associates'

let associates_data:AssociatesData = {}
let data_fetching_error:string | null = null

try {
    associates_data = await get_associates_data(auth_token, lang, user_id)
} catch (error) {
    data_fetching_error = error.message
}

const {
    corporations = [],
    user_corporation_id = 0,
} = associates_data

const corporation_type = Astro.url.searchParams.get('corporation_type') as CorporationType

const CORPORATIONS_LIST_PARTIAL_URL = `${translatePath('/partials/corporations_list_component')}?corporation_type=${corporation_type}`

const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import CorporationsList from '@components/blocks/CorporationsList.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{data_fetching_error ?
    <ErrorRefetch
        args={{
            partial: CORPORATIONS_LIST_PARTIAL_URL,
            message: data_fetching_error,
            delay: delay,
        }}
    />
    :
    <CorporationsList
        corporations={corporations}
        user_corporation_id={user_corporation_id}
        disable_applications={corporation_type === 'associate'}
        x-data={`{
            init() {
                corporations_count = ${corporations.length}
            }
        }`}
    />
}