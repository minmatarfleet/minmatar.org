---
import { i18n } from '@helpers/i18n'
const { lang, translatePath } = i18n(Astro.url)

import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : false
const is_superuser = (user ? user?.is_superuser : false)

import { get_user_permissions } from '@helpers/permissions'
const user_permissions = (user ? await get_user_permissions(user?.username) : [])

const can_view_page = is_superuser || user_permissions.includes('eveonline.view_evecorporation')

if (!can_view_page)
    return HTTP_404_Not_Found()

import { get_mains_data } from '@helpers/pages/mains'
import type { MainsData } from '@helpers/pages/mains'

let mains_data:MainsData = {}
let data_fetching_error

try {
    mains_data = await get_mains_data(auth_token as string, lang)
} catch (error) {
    data_fetching_error = error
}

const {
    mains_alts = [],
    main_count = 0,
    alliance_members_count = 0,
    unregistered_count = 0,
    mains_unfiltered = {},
    mains_alts_count = {},
    total_alts = 0,
    mains_options = [],
} = mains_data

const MAINS_ALTS_PARTIAL_URL = `${translatePath('/partials/mains_alts_component')}`

const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import MainAltsList from '@components/blocks/MainAltsList.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{data_fetching_error ?
    <ErrorRefetch
        args={{
            partial: MAINS_ALTS_PARTIAL_URL,
            message: data_fetching_error,
            delay: delay,
        }}
    />
    :
    <MainAltsList
        mains={mains_alts}
        x-data={`{
            init() {
                main_count = ${main_count}
                alliance_members_count = ${alliance_members_count}
                unregistered_count = ${unregistered_count}
                mains_alts = ${JSON.stringify(mains_alts)}
                mains_unfiltered = ${JSON.stringify(mains_unfiltered)}
                mains_filtered = ${JSON.stringify(mains_unfiltered)}
                mains_filtered_alts_count = ${JSON.stringify(mains_alts_count)}
                total_alts_filtered = ${total_alts}
                total_alts_unfiltered = ${total_alts}
                mains_options = ${JSON.stringify(mains_options)}
            }
        }`}
    />
}