---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false
const user = auth_token ? jose.decodeJwt(auth_token) as User : false

import { get_all_alliance_members } from '@helpers/fetching/corporations'
import type { CharacterBasic } from '@dtypes/layout_components'

const character_name = Astro.url.searchParams.get('character_name') as string

let members:CharacterBasic[] = []
let get_groups_members_error:string | false = false
try {
    members = ((character_name?.length ?? 0) > 2 && auth_token && user ? await get_all_alliance_members(auth_token) : [])
    console.log(character_name)
    members = members.filter(member => member.character_name.toLowerCase().includes(character_name.toLowerCase()))
    members.sort((a, b) => a.character_name.localeCompare(b.character_name))
} catch (error) {
    console.log(error)
    get_groups_members_error = prod_error_messages() ? t('get_all_corporations_members_error') : error.message
}

import PilotBadge from '@components/blocks/PilotBadge.astro';
import StylessButton from '@components/blocks/StylessButton.astro';
---

{(character_name?.length > 2 && members.length === 0) ?
    <div class="[ py-[var(--space-2xs)] px-[var(--space-2xs)] ]">
        <span>{t('no_characters')}</span>
    </div>
    :
    members.map((member) =>
        <StylessButton
            type="button"
            x-data={`{
                show_character_modal() {
                    close_dialog()
                    show_modal({
                        partial: '${translatePath('/partials/character_modal_component/')}?character_id=${member.character_id}',
                    })
                }
            }`}
            x-on:click="show_character_modal()"
        >
            <PilotBadge
                character_id={member.character_id}
                character_name={member.character_name}
                corporation={member.corporation}
                inert={true}
            />
        </StylessButton>
    )
}