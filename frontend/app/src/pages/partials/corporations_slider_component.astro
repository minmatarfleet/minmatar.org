---
import { getLangFromUrl, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : null
const user_id = user?.user_id ?? null

import { get_corporations_list_data } from '@helpers/pages/corporations_list'
import type { CorporationsListData } from '@helpers/pages/corporations_list'

let corporations_list_data:CorporationsListData = {}
let data_fetching_error:string

try {
    corporations_list_data = await get_corporations_list_data(auth_token, lang, user_id)
} catch (error) {
    data_fetching_error = error
}

const {
    corporations = [],
    user_corporation_id = null,
} = corporations_list_data

const CORPORATIONS_SLIDER_PARTIAL_URL = translatePath('/partials/corporations_slider_component/')

const delay = parseInt(Astro.url.searchParams.get('delay'))

import CorporationsSlider from '@components/blocks/CorporationsSlider.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{data_fetching_error ?
    <ErrorRefetch
        args={{
            partial: CORPORATIONS_SLIDER_PARTIAL_URL,
            message: data_fetching_error,
            delay: delay,
        }}
    />
    :
    <CorporationsSlider
        corporations={corporations}
        user_corporation_id={user_corporation_id}
    />
}