---
import { i18n } from '@helpers/i18n'
const { lang, t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'

import type { DoctrineType, DoctrineTypes } from '@dtypes/layout_components'
import { doctrine_types } from '@dtypes/layout_components'
import { fetch_doctrines } from '@helpers/fetching/doctrines'

let doctrines:DoctrineType[] = []
let fetch_doctrines_error:string | false = false

interface GroupedDoctrines {
    type:       DoctrineTypes;
    doctrines:  DoctrineType[];
}

let doctrines_by_groups:GroupedDoctrines[] = []

try {
    doctrines = await fetch_doctrines()

    doctrine_types.forEach((doctrine_type) => {
        doctrines_by_groups.push({
            type: doctrine_type,
            doctrines: doctrines.filter((doctrine) => doctrine.type === doctrine_type)
        })
    })
} catch (error) {
    fetch_doctrines_error = prod_error_messages() ? t('fetch_doctrines_error') : error.message
}

const DOCTRINES_PARTIAL_URL = translatePath(`/partials/doctrines_component`)

const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import { semantic_list } from '@helpers/array';

import TextBox from '@components/layout/TextBox.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import Grid from '@components/compositions/Grid.astro';

import DoctrineCard from '@components/blocks/DoctrineCard.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{fetch_doctrines_error ?
    <ErrorRefetch
        args={{
            partial: DOCTRINES_PARTIAL_URL,
            message: fetch_doctrines_error,
            delay: delay,
        }}
    />
    :
    <Flexblock
        role="list"
        gap='var(--space-xl)'
        x-data={`{
            init() {
                show_all = true
                doctrines_count = ${doctrines.length}
            }
        }`}
    >
        {doctrines_by_groups.map((doctrines_by_group) =>
            <Flexblock class="[ doctrine-groups ]" gap='var(--space-m)'>
                <TextBox>
                    <Flexblock>
                        <h2>{t(doctrines_by_group.type as any)}</h2>
                        <p>{t(`${doctrines_by_group.type}_description` as any)}</p>
                    </Flexblock>
                </TextBox>
                         
                <Grid
                    role="list"
                    class="[ w-full grid-fill ]"
                    min_item_width='240px'
                    row_gap='var(--space-3xs)'
                    column_gap='var(--space-3xs)'
                >
                    {doctrines_by_group.doctrines.map((doctrine) =>
                        <a
                            class="[ doctrine-card-container ]"
                            x-show={`(${doctrine.sigs.length > 0}) ? show_all : true`}
                            href={translatePath(`/ships/doctrines/list/${doctrine.id}`)}
                        >
                            <DoctrineCard
                                doctrine={doctrine}
                                subtitle={semantic_list(lang, doctrine.primary_fittings.map((primary_fitting) => primary_fitting.ship_name))}
                            />
                        </div>
                    )}
                </Grid>
            </Flexblock>
        )}
    </Flexblock>
}