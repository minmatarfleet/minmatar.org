---
import { i18n } from '@helpers/i18n'
const { lang, translatePath } = i18n(Astro.url)

import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : false
const is_superuser = (user ? user?.is_superuser : false)

import { get_user_permissions } from '@helpers/permissions'
const user_permissions = (user ? await get_user_permissions(user?.username) : [])

const can_view_page = is_superuser || user_permissions.includes('eveonline.view_evecorporation')

if (!can_view_page)
    return HTTP_404_Not_Found()

import { get_corporations_members_data } from '@helpers/pages/corporations_members'
import type { CorporationsMembersData } from '@helpers/pages/corporations_members'
import type { MemberStatus } from '@dtypes/layout_components'

let corporations_members_data:CorporationsMembersData = {}
let data_fetching_error
const status = (Astro.url.searchParams.get('status') ?? 'registered') as MemberStatus

try {

    corporations_members_data = await get_corporations_members_data(auth_token as string, lang, status)
} catch (error) {
    data_fetching_error = error.message
}

const {
    corporations_members = [],
    main_count = 0,
    alliance_members_count = 0,
    unregistered_count = 0,
    corporations_unfiltered = {},
    corporations_members_count = {},
    total_members = 0,
    corporations_options = [],
} = corporations_members_data

const CORPORATIONS_MEMBERS_PARTIAL_URL = `${translatePath('/partials/corporations_members_component')}?status=${status}`
                
const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import CorporationMembersList from '@components/blocks/CorporationMembersList.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
---

{data_fetching_error ?
    <ErrorRefetch
        args={{
            partial: CORPORATIONS_MEMBERS_PARTIAL_URL,
            message: data_fetching_error,
            delay: delay,
        }}
    />
    :
    <CorporationMembersList
        corporations={corporations_members}
        x-data={`{
            init() {
                main_count = ${main_count}
                alliance_members_count = ${alliance_members_count}
                unregistered_count = ${unregistered_count}
                corporations_members = ${JSON.stringify(corporations_members)}
                corporations_unfiltered = ${JSON.stringify(corporations_unfiltered)}
                corporations_filtered = ${JSON.stringify(corporations_unfiltered)}
                corporations_filtered_members_count = ${JSON.stringify(corporations_members_count)}
                total_members_filtered = ${total_members}
                total_members_unfiltered = ${total_members}
                corporations_options = ${JSON.stringify(corporations_options)}
            }
        }`}
    />
}