---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'
import { HTTP_404_Not_Found } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false
const is_superuser = (user ? user?.is_superuser : false)

import { get_user_permissions } from '@helpers/permissions'
const user_permissions = (user ? await get_user_permissions(user?.username) : [])
console.log(JSON.stringify(user_permissions))

const can_view_srp = is_superuser || user_permissions.includes('srp.change_evefleetshipreimbursement')

if (!can_view_srp)
    return HTTP_404_Not_Found()

import type { FleetSRPUI } from '@dtypes/layout_components'
import { fetch_srps } from '@helpers/fetching/srp'

let fetch_srp_error:string | false = false
let fleets_srps:FleetSRPUI[] | null = []
let srps_count:number = 0

try {
    fleets_srps = await fetch_srps(auth_token as string)

    srps_count = fleets_srps.reduce((c, v) => c + v.srps.length, 0)
} catch (error) {
    fetch_srp_error = prod_error_messages() ? t('fetch_srp_error') : error.message
}

const FLEETS_SRPS_PARTIAL_URL = translatePath(`/partials/fleets_srps_component`)

const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import Flexblock from '@components/compositions/Flexblock.astro';

import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';

import SRPTable from '@components/blocks/SRPTable.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro'
---
        
{fetch_srp_error ?
    <ErrorRefetch
        args={{
            partial: FLEETS_SRPS_PARTIAL_URL,
            message: fetch_srp_error,
            delay: delay,
        }}
    />
    :
    <div x-data={`{ srps_count: ${srps_count} }`} x-init="el.remove()"></div>
    <Flexblock class="[ w-full ]">
        {fleets_srps.map(fleet_srps =>
            <ComponentBlock width='narrow'>
                <SRPTable fleet_id={fleet_srps.fleet_id} fleet_srps={fleet_srps.srps} readonly={false} fleet_title={true} />
            </ComponentBlock>
        )}
    </Flexblock>
}