---
import { i18n } from '@helpers/i18n'
const { lang, t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

const user_is_superadmin = (auth_token && user ? user.is_superuser : false)


import type { Alert, StagingType } from '@dtypes/layout_components'
import type { PostListUI } from '@dtypes/layout_components'
import { fetch_posts } from '@helpers/fetching/posts'
import { get_market_locations } from '@helpers/api.minmatar.org/market'
import { is_seasonal_date } from '@helpers/date'

let contracts_service_staging:string[] = []
let posts:PostListUI[] = []
const PAGE_LENGTH = 3
let post_fetching_error:string | false = false

try {
    const market_locations = await get_market_locations()
	contracts_service_staging = market_locations.map(contracts_trade_hub => contracts_trade_hub.name)

    const paginated_posts = await fetch_posts({
        page_num: 1,
        page_size: PAGE_LENGTH,
        status: 'published',
    })

    posts = paginated_posts.chunk
} catch (error) {
    post_fetching_error = prod_error_messages() ? t('fetch_doctrines_error') : error.message
}

const NEY_YEAR_EVE_DECORATION = is_seasonal_date('12-31', '12-31')
const WINTER_NEXUS_DECORATION = !NEY_YEAR_EVE_DECORATION ? is_seasonal_date('12-05', '01-06') : false
const CRIMSON_HARVEST_DECORATION = is_seasonal_date('10-03', '11-05')

import { is_referral_url } from '@helpers/fetching/referrals'
const is_referral_page = user ? is_referral_url(Astro.url.pathname, lang) : false

import { query_string } from '@helpers/string';
import { is_disabled_ccpwgl } from '@helpers/env';

const DISABLED_CCPWGL = is_disabled_ccpwgl()

import Viewport from '@layouts/Viewport.astro';

import PageLanding from '@components/page/PageLanding.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import Wrapper from '@components/compositions/Wrapper.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import FluidFixed from '@components/compositions/FluidFixed.astro';

import StationAssets from '@components/blocks/StationAssets.astro';
import WatermellonInfo from '@components/blocks/WatermellonInfo.astro';
import AugaInfo from '@components/blocks/AugaInfo.astro';
import NakahInfo from '@components/blocks/NakahInfo.astro';
import VardInfo from '@components/blocks/VardInfo.astro';
import Input from '@components/blocks/Input.astro';
import HomeCorporations from '@components/blocks/HomeCorporations.astro';
import FleetFeed from '@components/blocks/FleetFeed.astro';
import MediaFeed from '@components/blocks/MediaFeed.astro';
import WikiSmall from '@components/blocks/WikiSmall.astro';
import RatBibbleWidget from '@components/blocks/RatBibbleWidget.astro';
import DiscordSmall from '@components/blocks/DiscordSmall.astro';
import RedditSmall from '@components/blocks/RedditSmall.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import StylessButton from '@components/blocks/StylessButton.astro';
import MetaGuideWidget from '@components/blocks/MetaGuideWidget.astro';
import NewsFeed from '@components/blocks/NewsFeed.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro'
import ReferralLink from '@components/blocks/ReferralLink.astro';
import ShowAlert from '@components/blocks/ShowAlert.astro';

import FleetLogo from '@components/icons/FleetLogo.astro';
import MapEvEIcon from '@components/icons/MapEvEIcon.astro';
import ContractsServiceEvEIcon from '@components/icons/ContractsServiceEvEIcon.astro';

import {
	WatermellonXData,
	WatermellonCameraXData,
	AugaMilitiaHQCameraXData,
	AugaMilitiaHQXData,
	BananaCameraXData,
	BananaXData,
	RunForrestCameraXData,
	RunForrestXData,
} from '@components/partials/HomepageRenders.astro';

type StagingTranslation = {
	[key in StagingType]: string;
}

const STAGINGS_STATIONS:StagingTranslation = {
	auga: 'Auga - Minmatar Militia HQ',
	nakah: 'Nakah - Banana',
	vard: 'Vard - DONG OF WAR',
	watermellon: 'Sosala - WATERMELLON',
}

const STAGINGS_SYSTEMS:StagingTranslation = {
	auga: 'Auga',
	nakah: 'Nakah',
	vard: 'Vard',
	watermellon: 'Sosala',
}

const RATTINI_TRIBE_ID = 98726134
const BLACK_OMEGA_SECUTIRY_ID = 263585335
const BALLS_DEEP_ID = 98252708

import { stagings } from '@dtypes/layout_components'

const staging = Astro.cookies.has('staging') ?
	Astro.cookies.get('staging')?.value as StagingType :
	stagings[Math.floor(Math.random() * stagings.length)]
	
const is_random_staging = !Astro.cookies.has('staging')

const auth_error = Astro.cookies.has('auth_error') ? Astro.cookies.get('auth_error')?.value : false
if (auth_error) Astro.cookies.delete('auth_error', { path: '/' })

const alert = auth_error ? {
	title: t('auth_error_dialog_title'),
	content: auth_error,
} as Alert : false

const page_title = t('index.page_title');
const page_description = t('index.leading_text');
---

<Viewport
	title={page_title}
	meta_description={page_description}
	components={{
		alert_dialog: true,
	}}
>
    <PageLanding
        cover={{
            image: staging === 'auga' ? `/images/home-auga-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					staging === 'nakah' ? `/images/home-nakah-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					staging === 'vard' ? `/images/home-vard-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					`/images/home-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}`,
            image_990: staging === 'auga' ? `/images/home-auga-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					   staging === 'nakah' ? `/images/home-nakah-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					   staging === 'vard' ? `/images/home-vard-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}` :
					   `/images/home-cover${DISABLED_CCPWGL ? '-eve.jpg' : '.jpg'}`,
            animated: false,
        }}
        fullscreen={true}
        wide={true}
		x-data={`{
			show_fleet_feeds: true,
			show_stagging_info: true,
            ${staging === 'auga' ? AugaMilitiaHQCameraXData :
				staging === 'nakah' ? BananaCameraXData :
				staging === 'vard' ? RunForrestCameraXData :
				WatermellonCameraXData
			}
        }`}
        x-effect="update"
    >
		{alert && <ShowAlert alert={alert} /> }

		{!DISABLED_CCPWGL &&
			<canvas
				slot="cover"
				id="mainCanvas"
				width="500"
				height="500"
				x-on:scroll.stop
				x-on:mousewheel.stop
				x-data={`{
					${staging === 'auga' ? AugaMilitiaHQXData :
						staging === 'nakah' ? BananaXData :
						staging === 'vard' ? RunForrestXData :
						WatermellonXData
					}
				}`}
				x-on:resize.window.throttle="resizeCanvasToDisplaySize(resize_canvas, ccpwgl_context)"
				x-init="$nextTick(() => init_ccpwgl())"
			/>
		}

		{is_referral_page && user &&
			<div class="[ fixed top-[var(--space-2xs)] left-[var(--space-xl)] ]">
				<ReferralLink user_id={user.user_id} />
			</div>
		}

		<div x-show="show_stagging_info">
			<Flexblock 
				class="[ station-info ][ !hidden xl:!block ]"
				gap='0'
			>
				{staging === 'auga' ? <AugaInfo is_random={is_random_staging} /> :
					staging === 'nakah' ? <NakahInfo is_random={is_random_staging} /> :
					staging === 'vard' ? <VardInfo is_random={is_random_staging} /> :
					<WatermellonInfo is_random={is_random_staging} />
				}
				<FlexInline gap='var(--space-3xs)'>
					{user &&
						<StationAssets
							corporation={
								staging === 'auga' ? {
									id: RATTINI_TRIBE_ID,
									name: 'Rattini Tribe',
								} : staging === 'nakah' ? {
									id: BALLS_DEEP_ID,
									name: 'Balls Deep Inc.',
								} : staging === 'vard' ? {
									id: BALLS_DEEP_ID,
									name: 'Balls Deep Inc.',
								}: {
									id: BLACK_OMEGA_SECUTIRY_ID,
									name: 'Black Omega Security'
								}
							}
							station={STAGINGS_STATIONS[staging] ?? 'Sosala - WATERMELLON'}
						/>
					}
					{contracts_service_staging.find(contract_staging => contract_staging === STAGINGS_STATIONS[staging]) &&
						<a
							class="[ neocom-button ][ w-[32px] animate-fade-in-up ]"
							data-tippy-content={t('view_station_market_contracts')}
							href={translatePath(`/market/contracts/?${query_string({staging: STAGINGS_STATIONS[staging]})}`)}
						>
							<ContractsServiceEvEIcon />
						</a>
					}
					<a
						class="[ neocom-button ][ w-[32px] animate-fade-in-up ]"
						data-tippy-content={t('view_on_dotlan')}
						href={`https://evemaps.dotlan.net/system/${STAGINGS_SYSTEMS[staging] ?? 'Sosala'}`}
						target="_blank"
						rel="nofollow noopener noreferrer"
					>
						<MapEvEIcon />
					</a>
				</FlexInline>
			</Flexblock>
		</div>

		<VerticalCenter
			class="[ content-section ][ min-h-[100vh] max-w-[48rem] ]"
			x-intersect:enter.margin.-230px="show_stagging_info = true"
			x-intersect:leave.margin.-230px="show_stagging_info = false"
		>
			<Wrapper
				max_width='48rem'
				padding_inline='0'
				padding_block="var(--space-l)"
			>
				<Flexblock
					gap='var(--space-m)'
					class="[ text-center ]"
				>
					<h1 class="[ flex justify-center ]"><FleetLogo width='256' height='256' /></h1>
					
					<h2 class="[ welcome-heading ]">{t('index.title')}</h2>

					<p>{t('index.leading_text')}</p>

					<FlexInline justification='center'>
						<StylessButton href='#widgets' class="[ caret-down ]" />
					</FlexInline>

					{user_is_superadmin &&
						<Flexblock class="[ camera-controls !hidden ]">
							<Flexblock gap='0'>
								<label for="doctrine">{t('rotation_x')}</label>
								<Input type="number" x-model="rotation_x" step="0.01" />
							</Flexblock>
							<Flexblock gap='0'>
								<label for="doctrine">{t('rotation_y')}</label>
								<Input type="number" x-model="rotation_y" step="0.01" />
							</Flexblock>
						</Flexblock>
					}
				</Flexblock>
			</Wrapper>
		</VerticalCenter>

		<Wrapper
			max_width='90rem'
			padding_inline='0'
			padding_block="0"
			class="[ content-section mt-2 ]"
		>

			<Flexblock
				id="widgets"
				gap='var(--space-3xs)'
				class="[ w-full ]"
				x-intersect:enter="show_fleet_feeds = false"
				x-intersect:leave="show_fleet_feeds = true"
			>
				<FluidFixed
					width='656px'
					gap='var(--space-3xs)'
					breakpoint='49%'
					class="[ w-full ]"
				>
					<Wrapper
						padding_block='0'
						padding_inline='0'
						class="[ relative w-full ]"
						max_width='656px'
					>
						<Flexblock gap='var(--space-3xs)'>
							<HomeCorporations />
							<WikiSmall						
								padding_block='0'
								padding_inline='var(--space-s)'
								class="[ basis-[50%] shrink ]"
							/>
						</Flexblock>
					</Wrapper>

					<Wrapper
						padding_block='0'
						padding_inline='0'
						max_width='656px'
						class="[ relative z-10 w-full ]"
					>
						<MediaFeed />
					</Wrapper>
				</FluidFixed>

				<FluidFixed
					width='656px'
					gap='var(--space-3xs)'
					breakpoint='49%'
					class="[ !items-start w-full ]"
				>
					<MetaGuideWidget />
					<Flexblock class="[ w-full ]" gap='var(--space-3xs)'>
						{posts?.length > 0 &&
							<ComponentBlock class="[ w-full ]" padding_block='0' padding_inline='0' max_width='656px'>
								<NewsFeed posts={posts} />
							</ComponentBlock>
						}
						<RatBibbleWidget						
							padding_block='0'
							padding_inline='var(--space-s)'
							class="[ basis-[50%] shrink ]"
						/>
					</Flexblock>
				</FluidFixed>
			</Flexblock>

			<Wrapper
				padding_inline="0"
				padding_block="var(--space-3xl)"
				max_width='100%'
				centered={true}
			>
				<Flexblock>
					<FlexInline
						gap='var(--space-l)'
						justification='center'
					>
						<RedditSmall						
							padding_block='0'
							padding_inline='var(--space-s)'
						/>
						<DiscordSmall						
							padding_block='0'
							padding_inline='var(--space-s)'
						/>
					</FlexInline>

					<Wrapper
						padding_inline="0"
						padding_block="0"
						max_width='40rem'
						centered={true}
					>
						<p class="[ ccp-disclaimer ][ text-center ]">{t('ccp_disclaimer')}</p>
					</Wrapper>
				</Flexblock>
			</Wrapper>
		</Wrapper>

		{(WINTER_NEXUS_DECORATION || NEY_YEAR_EVE_DECORATION || CRIMSON_HARVEST_DECORATION) &&
			<canvas id="decoration_overlay" />
		}

		{user &&
			<FleetFeed />
		}
    </PageLanding>
</Viewport>

{WINTER_NEXUS_DECORATION && (
	<script is:inline>
		(async () => {
			const canvas = document.getElementById("decoration_overlay")
			console.log(canvas)

			canvas.confetti =
				canvas.confetti || (await confetti.create(canvas, { resize: true }))
		
			let skew = 1
			let tick = 0

			function randomInRange(min, max) {
				return Math.random() * (max - min) + min
			}

			(function frame() {
				skew = 0.8
				tick += 1

				const DEFAULTS = {
					particleCount: 1,
					startVelocity: 0,
					origin: {
						x: Math.random(),
						y: Math.random() * skew - 0.2,
					},
					colors: ["#ffffff"],
					shapes: ["image"],
					shapeOptions: {
						image: {
							src: "/images/snowflake.svg",
							replaceColor: true,
							width: 21,
							height: 24,
						},
					},
					gravity: randomInRange(0.4, 0.6),
					scalar: randomInRange(0.4, 1),
					drift: randomInRange(-0.4, 0.4),
				}

				tick % 100 === 0 && canvas.confetti({
					...DEFAULTS,
					scalar: randomInRange(2, 4),
					ticks: 200,
				})

				tick % 30 === 0 && canvas.confetti({
					...DEFAULTS,
					scalar: randomInRange(1, 1.5),
					ticks: 200,
				})

				canvas.confetti({
					...DEFAULTS,
					scalar: randomInRange(0.3, 0.6),
					ticks: 200,
				})

				if (document.querySelector('.ccp-disclaimer')) requestAnimationFrame(frame)
			})();
		})();
	</script>
)}

{NEY_YEAR_EVE_DECORATION && (
	<script is:inline>
		(async () => {
			const canvas = document.getElementById("decoration_overlay")

			canvas.confetti =
				canvas.confetti || (await confetti.create(canvas, { resize: true }))

			let tick = 0

			function randomInRange(min, max) {
				return Math.random() * (max - min) + min
			}

			(function frame() {
				skew = 0.8
				tick += 1

				const DEFAULTS = {
					startVelocity: 30,
					spread: 360,
					ticks: 60,
					particleCount: 50,
					zIndex: 0,
				}

				tick % 150 === 0 && canvas.confetti({
					...DEFAULTS,
					scalar: randomInRange(0.5, 2),
					origin: { x: randomInRange(0.1, 0.9), y: randomInRange(0.1, 0.6) },
					ticks: 200,
				})

				if (document.querySelector('.ccp-disclaimer')) requestAnimationFrame(frame)
			})()
		})()
	</script>
)}

{CRIMSON_HARVEST_DECORATION && (
	<script is:inline>
		tsParticles.load(
			"decoration_overlay", {
				fpsLimit: 60,
				emitters: {
					autoPlay: true,
					rate: {
						delay: 1,
						quantity: 1
					},
					size: {
						mode: "percent",
						height: 100,
						width: 100
					},
				},
  				particles: {
					number: {
						value: 0
					},
					shape: {
						type: [
							"image"
						],
						options: {
							image: [
								{
									src: "/images/jack_o_lantern.svg",
									width: 32,
									height: 32,
									particles: {
										size: {
											value: 30
										}
									}
								}
							]
						},
					},
					opacity: {
						value: 1,
						animation: {
							enable: true,
							startValue: "max",
							speed: 1,
							decay: 0.5,
							destroy: "min"
						},
					},
					size: {
						value: 60,
						animation: {
							enable: true,
							startValue: "min",
							speed: 1
						},
					},
					move: {
						enable: false
					},
					life: {
						duration: {
							sync: false,
							value: 20
						},
						count: 1
					},
				},
		})
	</script>
)}

<style lang="scss">
	#decoration_overlay {
		position: absolute;
		inset: 0;
		height: 100%;
		width: 100%;
	}

	.station-info {
		position: fixed;
		top: var(--space-l);
		right: var(--space-xl);
		z-index: 2;
	}

	.ccp-disclaimer {
		font-size: var(--step--2);
	}

	.camera-controls {
		position: fixed;
		top: 60px;
		left: 100px;
		width: 250px;
	}

	.welcome-heading {
		font-size: var(--step-5);
	}

    .left-panel {
        position: absolute;
    }

	.content-section {
		position: relative;
		z-index: 1;
		align-items: center;
	}

	.caret-down {
		transform: rotate(90deg);

		&:before {
			content: 'next';
			color: var(--highlight);
			font-family: swiper-icons;
			font-size: var(--swiper-navigation-size);
			text-transform: none !important;
			letter-spacing: 0;
			font-variant: initial;
			line-height: 1;
		}
	}
</style>

<style is:global>

    #mainCanvas {
        border: none;
        position:fixed;
        width:100%;
        height:100%;
		/*z-index: -1;*/
    }

	#tsparticles {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: none; /* Ensures no conflicting background */
	}

</style>