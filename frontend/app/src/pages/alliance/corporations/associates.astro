---
import { i18n } from '@helpers/i18n'
const { lang, t, translatePath } = i18n(Astro.url)

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : null
const user_id = user?.user_id ?? null

import { get_associates_data } from '@helpers/pages/associates'
import type { AssociatesData } from '@helpers/pages/associates'

let associates_data:AssociatesData = {}
let data_fetching_error:string | null = null

try {
    associates_data = await get_associates_data(auth_token, lang, user_id)
} catch (error) {
    data_fetching_error = error
}

const {
    corporations = [],
    user_corporation_id = null,
} = associates_data

const CORPORATIONS_LIST_PARTIAL_URL = `${translatePath('/partials/corporations_list_component')}?corporation_type=associate`

import Viewport from '@layouts/Viewport.astro';

import PageDefault from '@components/page/PageDefault.astro';
import PageTitle from '@components/page/PageTitle.astro';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import CorporationsList from '@components/blocks/CorporationsList.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';

const page_title = t('corporations.associates.page_title');
const page_description = t('corporations.associates.leading_text');
---

<Viewport
    title={page_title}
    meta_description={page_description}
    components={{
        alert_dialog: true,
        confirm_dialog: true,
    }}
>
    <PageDefault
        wide={true}
        cover={{
            image: "/images/alliance-cover.jpg",
            image_990: "/images/alliance-cover-990.jpg",
            alt: t('alliance.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
        x-data={`{
            corporation_name: '',
            corporations_count: ${corporations.length}
        }`}
    >
        <FlexInline slot="header" justification='space-between' class="[ w-full ]">
            <FlexInline>
                <Flexblock gap="var(--space-3xs)">
                    <PageTitle>
                        {page_title}
                    </PageTitle>
                    <small x-text={`\`\${corporations_count} \${corporations_count != 1 ? '${t('corporations').toLowerCase()}' : '${t('corporation').toLowerCase()}'}\``}>
                        {corporations.length} {corporations.length != 1 ? t('corporations').toLowerCase() : t('corporation').toLowerCase()}
                    </small>
                </Flexblock>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-xl)">
            {data_fetching_error ?
                <ErrorRefetch
                    args={{
                        partial: CORPORATIONS_LIST_PARTIAL_URL,
                        message: data_fetching_error,
                        delay: 0,
                    }}
                />
                :
                <CorporationsList
                    corporations={corporations}
                    user_corporation_id={user_corporation_id ?? 0}
                    disable_applications={true}
                />
            }
        </Flexblock>
	</PageDefault>
</Viewport>

<style lang="scss">
    h3 {
        margin-block-start: var(--space-l);
    }
</style>