---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { prod_error_messages } from '@helpers/env'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user = auth_token ? jose.decodeJwt(auth_token) as User : false
const user_id = !user ? false : user.user_id

import type { CorporationObject } from '@dtypes/layout_components'
import { get_corporations_list, get_corporations_list_auth, get_user_corporation_id } from '@helpers/fetching/corporations'

let corporations:CorporationObject[] = []
let get_all_corporations_error:string | false = false
let user_corporation_id:number

try {
    user_corporation_id = (user_id ? await get_user_corporation_id(user_id) : null)

    if (auth_token && user_id)
        corporations = await get_corporations_list_auth(auth_token, user_id, 'alliance')
    else
        corporations = await get_corporations_list('alliance')
} catch (error) {
    get_all_corporations_error = prod_error_messages() ? t('get_all_corporations_error') : error.message
}

const CORPORATIONS_SLIDER_PARTIAL_URL = translatePath('/partials/corporations_slider_component/')

import Viewport from '@layouts/Viewport.astro';

import PageLanding from '@components/page/PageLanding.astro';

import CorporationsSlider from '@components/blocks/CorporationsSlider.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';

const page_title = t('corporations.list.page_title');
const page_description = t('corporations.list.leading_text');
---

<Viewport
    title={page_title}
    meta_description={page_description}
    components={{
        alert_dialog: true,
        confirm_dialog: true,
    }}
>
    <PageLanding
        wide={true}
        fullscreen={true}
        cover={{
            image: "/images/corporations-cover.jpg",
            image_990: "/images/corporations-cover-990.jpg",
            alt: t('corporations.cover_alt'),
            animated: false,
            scrollable: true,
            overlay: true
        }}
        x-data={`{
            corporation_name: '',
        }`}
    >
        <VerticalCenter class="[ min-h-[90vh] ]" gap="var(--space-xl)">
            {get_all_corporations_error ?
                <ErrorRefetch
                    args={{
                        partial: CORPORATIONS_SLIDER_PARTIAL_URL,
                        message: get_all_corporations_error,
                        delay: 0,
                    }}
                />
                :
                <CorporationsSlider
                    corporations={corporations}
                    user_corporation_id={user_corporation_id}
                />
            }
        </VerticalCenter>
	</PageLanding>
</Viewport>

<style lang="scss">
    h3 {
        margin-block-start: var(--space-l);
    }
</style>