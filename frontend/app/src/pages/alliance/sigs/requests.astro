---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { prod_error_messages } from '@helpers/env'
import { HTTP_403_Forbidden } from '@helpers/http_responses'

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false
const is_superuser = (user ? user?.is_superuser : false)

if (!auth_token || !user)
    return HTTP_403_Forbidden()

import { is_officer } from '@helpers/fetching/groups'
const can_view_page = is_superuser || (auth_token && user ? await is_officer(auth_token, user.user_id) : false)

if (!can_view_page)
    return HTTP_403_Forbidden()

import type { GroupRequestListUI } from '@dtypes/layout_components'
import { get_all_groups_requests } from '@helpers/fetching/group_requests'

let groups_requests:GroupRequestListUI[] = []
let get_all_groups_requests_error:string | false = false
try {
    groups_requests = await get_all_groups_requests(auth_token, 'group', user.user_id, is_superuser)
    groups_requests.sort( (a, b) => {
        return b.requests.length - a.requests.length
    })
} catch (error) {
    get_all_groups_requests_error = prod_error_messages() ? t('get_all_groups_requests_error') : error.message
}

const GROUP_REQUESTS_LIST_PARTIAL_URL = translatePath('/partials/group_requests_list_component/')

import Viewport from '@layouts/Viewport.astro';

import PageDefault from '@components/page/PageDefault.astro';
import PageTitle from '@components/page/PageTitle.astro';

import FlexInline from '@components/compositions/FlexInline.astro';
import Flexblock from '@components/compositions/Flexblock.astro';

import GroupRequestsList from '@components/blocks/GroupRequestsList.astro';
import TextBox from '@components/layout/TextBox.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
import Button from '@components/blocks/Button.astro';

import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';

const page_title = t('groups.requests.page_title');
---
<Viewport
    title={page_title}
    components={{
        alert_dialog: true,
        confirm_dialog: true,
        modal: true,
    }}
>
    <PageDefault
        cover={{
            image: "/images/groups-cover.jpg",
            image_990: "/images/groups-cover.jpg",
            animated: false,
            scrollable: true,
            overlay: true
        }}
        x-data={`{
            group_name: '',
        }`}
    >
        <FlexInline slot="header" justification='space-between' class="[ w-full ]">
            <PageTitle>
                {page_title}
            </PageTitle>
            <FlexInline>
                <Button class="[ !hidden md:!flex ]" href={translatePath('/alliance/sigs/members/')}>
                    <MagnifierIcon slot="icon" />
                    {t('view_members')}
                </Button>
            </FlexInline>
        </FlexInline>

        <Flexblock gap="var(--space-xl)">
            <TextBox>
                <p>{t('groups.requests.leading_text')}</p>
            </TextBox>

            {get_all_groups_requests_error ?
                <ErrorRefetch
                    args={{
                        partial: `${GROUP_REQUESTS_LIST_PARTIAL_URL}?groups_type=group`,
                        message: get_all_groups_requests_error,
                        delay: 0,
                    }}
                />
                :
                <GroupRequestsList
                    groups_requests={groups_requests}
                    groups_type='group'
                />
            }
        </Flexblock>
    </PageDefault>
</Viewport>