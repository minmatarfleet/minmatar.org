---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// TODO: Replace the static JSON below with the endpoint request using the id
const { id } = Astro.params;
console.log(`TODO: Fetch endpoint with id: ${id}`)
// Replace me ðŸ‘‡
import doctrine from '@json/page/doctrines/alliance/heavy_armor.json';

import Flexblock from '@components/compositions/Flexblock.astro';
import Wrapper from '@components/compositions/Wrapper.astro';
import Viewport from '@layouts/Viewport.astro';
import Button from '@components/blocks/Button.astro';
import ItemList from '@components/blocks/ItemList.astro';
import FleetIcon from '@components/icons/buttons/FleetIcon.astro';
import FitItem from '@components/blocks/FitItem.astro';

import PageCover from '@components/page/PageCover.astro';
import PageHeader from '@components/page/PageHeader.astro';
import PageTitle from '@components/page/PageTitle.astro';
import PageBody from '@components/page/PageBody.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

const page_title = `${doctrine.name} ${t('doctrine')}`;
---

<Viewport title={page_title}>
    <PageCover
        image="/images/doctrines-cover.jpg"
        image_990="/images/doctrines-cover-990.jpg"
        alt={t('doctrines.cover_alt')}
        animated={false}
        scrollable={true}
        overlay={true}
    />

	<main id="content">
        <PageHeader max_width="var(--max-content-width)">
            <FlexInline justification='space-between'>
                <FlexInline>
                    <PageTitle>
                        {page_title}
                    </PageTitle>
                </FlexInline>
                <FlexInline>
                    <Button color={'alliance-blue'} href={translatePath('/doctrines/alliance')} class="[ !hidden md:!flex ]">
                        <FleetIcon slot="icon" />
                        {t('alliance_doctrines')}
                    </Button>
                </FlexInline>
            </FlexInline>
        </PageHeader>

        <PageBody max_width="var(--max-content-width)">
            <Wrapper
                class="[ !pt-0 ]"
                max_width="var(--max-text-width)"
                padding_inline="0"
                padding_block="var(--space-xl)"
            >
                <p>{doctrine.description}</p>
            </Wrapper>

            <Flexblock gap="var(--space-xl)">
                
                <ItemList title={t('ideal_composition')} items={doctrine.ideal_composition} />
                
                <Flexblock gap="var(--space-3xs)">
                    {doctrine.fittings.map((fit) =>
                        <FitItem fit={fit} />
                    )}
                </Flexblock>

                <p>{doctrine.support_fittings.description}</p>

                <Flexblock gap="var(--space-3xs)">
                    {doctrine.support_fittings.fitting.map((fit) =>
                        <FitItem fit={fit} />
                    )}
                </Flexblock>

            </Flexblock>
        </PageBody>
	</main>
</Viewport>