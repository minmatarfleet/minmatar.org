---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { FleetItem } from '@dtypes/layout_components';

interface Props {
    fleet: FleetItem;
    history?: boolean;
    [propName: string]: any;
}

const {
    fleet,
    history = false,
    ...attributes
} = Astro.props

import { get_player_icon } from '@helpers/eve_image_server'

import Flexblock from '@components/compositions/Flexblock.astro';

import Button from '@components/blocks/Button.astro';
import ThumbCard from '@components/blocks/ThumbCard.astro';
import Countdown from '@components/blocks/Countdown.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import TextGroup from '@components/blocks/TextGroup.astro';

import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';
import StratopIcon from '@components/icons/StratopIcon.astro';
import NonStrategicIcon from '@components/icons/NonStrategicIcon.astro';
import CasualIcon from '@components/icons/CasualIcon.astro';
import TrainingIcon from '@components/icons/TrainingIcon.astro';

const eve_time = new Date(fleet.start_time);
const eve_time_text = eve_time.toLocaleDateString(lang, JSON.parse(import.meta.env.DATETIME_FORMAT))
---

<ThumbCard
    thumb_name={fleet.fleet_commander_name}
    thumb_image={get_player_icon(fleet.fleet_commander_id, 512)}
    thumb_image_small={get_player_icon(fleet.fleet_commander_id, 512)}
    thumb_image_alt={fleet.fleet_commander_name}
    thumb_title={t('fleet_commander')}
    x-data={`{
        local_time: new Date('${eve_time} UTC').toLocaleDateString(
            '${lang}',
            ${import.meta.env.DATETIME_FORMAT}
        )
    }`}
    {...attributes}
>
    <div
        class="[ absolute top-0 left-0 ]"
        data-tippy-content={
            fleet.type === 'strategic' ?
            t('strategic_fleet') :
            fleet.type === 'training' ?
            t('training_fleet') :
            t('non_strategic_fleet')
        }
    >
        {fleet.type === 'strategic' ?
            <StratopIcon /> :
            fleet.type === 'training' ?
            <TrainingIcon /> :
            fleet.type === 'non_strategic' &&
            <NonStrategicIcon />
        }
    </div>

    {fleet.fleet_commander_id === 0 &&
        <VerticalCenter class="[ grow ]">
            <Flexblock>
                {t('cant_view_fleet_details')}
            </Flexblock>
        </VerticalCenter>
    }

    {fleet.fleet_commander_id > 0 &&
        <VerticalCenter>
            <Flexblock gap="var(--space-s-m)">
                <TextGroup title={t('audience')}>
                    {fleet.audience}
                </TextGroup>
                <TextGroup title={t('location')}>
                    {fleet.location}
                </TextGroup>
            </Flexblock>
        </VerticalCenter>
        
        <VerticalCenter>
            <Flexblock gap="var(--space-s-m)">
                <TextGroup title={t('eve_time')} class="[ sentence-cap ]">
                    {eve_time_text}
                </TextGroup>
                <TextGroup title={t('local_time')} class="[ sentence-cap ]" x-text="local_time">
                    <span class="[ loading ]">{t('calculating')}</span>
                </TextGroup>
            </Flexblock>
        </VerticalCenter>
    }
        
    {fleet.fleet_commander_id > 0 &&
        <VerticalCenter>
            <Flexblock>
                {fleet?.tracking && !fleet?.tracking?.end_time &&
                    <p class="[ fleet-status-text blink-animation ]">{t('active')}</p>
                }

                {fleet?.tracking && fleet?.tracking?.end_time &&
                    <p class="[ fleet-status-text ]">{t('completed')}</p>
                }

                {!history && !fleet?.tracking &&
                    <Countdown
                        date={fleet.start_time}
                        id={fleet.id}
                        tag='countdown-fleet'
                    />
                }
            </Flexblock>
        </VerticalCenter>
    }

    {fleet.fleet_commander_id > 0 &&
        <VerticalCenter>
            <Button href={translatePath(`/fleets/${history ? 'history' : 'upcoming'}/${fleet.id}`)}>
                <MagnifierIcon slot="icon" />
                {t('view_details')}
            </Button>
        </VerticalCenter>
    }
</ThumbCard>

<style>
    .fleet-status-text {
        font-family: var(--heading-font);
        font-size: var(--step-0);
        color: var(--highlight);
		letter-spacing: 12px;
        text-indent: 12px;
		line-height: 1;
        white-space: nowrap;
        text-transform: uppercase;
    }
</style>