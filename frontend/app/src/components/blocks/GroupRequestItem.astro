---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { query_string } from '@helpers/string';
import type { Character } from '@dtypes/api.minmatar.org'
import type { GroupRequestUI, GroupItemType } from '@dtypes/layout_components'

interface Props {
    group_request:  GroupRequestUI,
    group_type:     GroupItemType,
}

const {
    group_request,
    group_type,
} = Astro.props

const GROUP_REQUEST_LIST_ITEM_PARTIAL_URL = translatePath('/partials/group_request_list_item')

const params = query_string({
    character_id: group_request.character_id,
    character_name: group_request.character_name,
} as Character)
const USER_CHARACTERS_PARTIAL_URL = `${translatePath('/partials/user_characters_component')}?${params}`

import FlexInline from '@components/compositions/FlexInline.astro';

import PilotBadge from '@components/blocks/PilotBadge.astro';
import Button from '@components/blocks/Button.astro';
import StylessButton from './StylessButton.astro';
---
<FlexInline
    class="[ group-request-item ]"
    justification='space-between'
>
    {group_type === 'team' ?
        <PilotBadge
            class="[ basis-[300px] grow ]"
            character_id={group_request.character_id}
            character_name={group_request.character_name}
            corporation={{
                id: group_request.corporation_id,
                name: group_request.corporation_name,
            }}
        />
        :
        <PilotBadge
            class="[ basis-[300px] grow ]"
            character_id={group_request.character_id}
            character_name={group_request.character_name}
        >
            <StylessButton
                x-data={`{
                    show_user_characters_modal() {
                        show_modal({
                            partial: '${USER_CHARACTERS_PARTIAL_URL}',
                        })
                    }
                }`}
                x-on:click="show_user_characters_modal()"
            >
                <small>{t('view_characters')}</small>
            </StylessButton>
        </PilotBadge>
    }
    <FlexInline>
        {group_request.character_id > 0 &&
            <Button
                size='sm'
                type="button"
                color='green'
                x-data={`{
                    show_accept_group_request_dialog() {
                        show_confirm_dialog({
                            title: '${group_type === 'team' ? t('accept_team_request_dialog_title') : t('accept_group_request_dialog_title')}',
                            partial: '${translatePath('/partials/dialog_with_group_request/')}?${query_string({
                                character_id: group_request.character_id.toString(),
                                character_name: group_request.character_name,
                                group_id: group_request.character_id.toString(),
                                group_name: group_request.group_name,
                                group_image: JSON.stringify(group_request.group_image),
                                group_description: group_request.description,
                                corporation_id: group_request.corporation_id,
                                corporation_name: group_request.corporation_name,
                                type: 'accept',
                                group_type: group_type,
                                message: (group_type === 'team' ? t('accept_team_request_dialog_text') : t('accept_group_request_dialog_text')),
                            })}',
                            return_on_accept: ${group_request.group_id},
                            hx: {
                                method: 'post',
                                url: '${GROUP_REQUEST_LIST_ITEM_PARTIAL_URL}?${query_string({
                                    group_id: group_request.group_id.toString(),
                                    group_type: group_type,
                                    request_id: group_request.request_id.toString(),
                                    action: 'accept'
                                })}',
                                target: '${`#group-request-list-${group_request.group_id}`}',
                                swap: 'outerHTML transition:true'
                            }
                        }).then( (group_id) => console.log(group_id) )
                    }
                }`}
                x-on:click="show_accept_group_request_dialog()"
            >
                {t('accept')}
            </Button>
        }
        
        <Button
            size='sm'
            x-data={`{
                show_deny_group_request_dialog() {
                    show_confirm_dialog({
                        title: '${group_type === 'team' ? t('deny_team_request_dialog_title') : t('deny_group_request_dialog_title')}',
                        partial: '${translatePath('/partials/dialog_with_group_request/')}?${query_string({
                            character_id: group_request.character_id.toString(),
                            character_name: group_request.character_name,
                            group_id: group_request.character_id.toString(),
                            group_name: group_request.group_name,
                            group_image: JSON.stringify(group_request.group_image),
                            group_description: group_request.description,
                            corporation_id: group_request.corporation_id,
                            corporation_name: group_request.corporation_name,
                            type: 'deny',
                            group_type: group_type,
                            message: (group_type === 'team' ? t('deny_team_request_dialog_text') : t('deny_group_request_dialog_text')),
                        })}',
                        return_on_deny: ${group_request.group_id},
                        hx: {
                            method: 'post',
                            url: '${GROUP_REQUEST_LIST_ITEM_PARTIAL_URL}?${query_string({
                                group_id: group_request.group_id.toString(),
                                group_type: group_type,
                                request_id: group_request.request_id.toString(),
                                action: 'deny'
                            })}',
                            target: '${`#group-request-list-${group_request.group_id}`}',
                            swap: 'outerHTML transition:true'
                        }
                    }).then( (group_id) => console.log(group_id) )
                }
            }`}
            x-on:click="show_deny_group_request_dialog()"
        >
            {t('deny')}
        </Button>
    </FlexInline>
</FlexInline>

<style lang="scss">
    .group-request-item {
        @media (hover: hover) {
            .action-button {
                transition: var(--fast-transition);
                opacity: 0;
            }

            &:hover,
            &:focus-within {
                .action-button {
                    opacity: 1;
                }
            }
        }
    }
</style>