---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import type { CorporationObject } from '@dtypes/layout_components'

interface Props {
    id:                     string;
    ceo_image:              string;
    ceo_character_id:       number;
    corporation:            CorporationObject;
    is_user_corporation?:   boolean;
    picture_placement:      'left' | 'right';
    mirror_slide?:          boolean;
}

const {
    id,
    ceo_image,
    ceo_character_id,
    corporation,
    is_user_corporation = false,
    picture_placement = 'left',
    mirror_slide = false,
} = Astro.props

import FixedFluid from "@components/compositions/FixedFluid.astro";
import Flexblock from "@components/compositions/Flexblock.astro";

import TextBox from '@components/layout/TextBox.astro';

import VerticalCenter from "@components/blocks/VerticalCenter.astro";
import CorporationSlideStatus from "@components/blocks/CorporationSlideStatus.astro";
import StylessButton from '@components/blocks/StylessButton.astro';

import { get_corporation_logo } from '@helpers/eve_image_server';
import { query_string } from '@helpers/string';
import Wrapper from '@components/compositions/Wrapper.astro';
---

<FixedFluid
    id={id}
    class:list={[ 'corporation-intro',  'w-full items-center', { mirrorwed: mirror_slide } ]}
    width='650px'
    breakpoint='30%'
    fluid_first={picture_placement === 'left'}
>
    <Wrapper
        padding_block='var(--space-s)'
        padding_inline='var(--space-s)'
    >
        <Flexblock gap='var(--space-xl)' class="[ content ][ pb-32 lg:pb-0 ]">
            <VerticalCenter>
                <FixedFluid width='64px' class="[ items-center w-full ]">
                    <picture class="[ border ]">
                        <img loading="lazy" src={get_corporation_logo(corporation.corporation_id, 64)} width="64" height="64" alt={`${corporation.corporation_name} ${t('corporation_logo')}`} />
                    </picture>
                    <h2>{corporation.corporation_name}</h2>
                </FixedFluid>
            </VerticalCenter>
            <TextBox>
                <slot />
            </TextBox>
            <CorporationSlideStatus
                corporation={corporation}
                is_user_corporation={is_user_corporation}
            />
        </Flexblock>
    </Wrapper>
    
    <div class="[ corporation-identity ]">
        <picture
            class:list={{ 'ceo-right': picture_placement === 'right' }}
        >
            <StylessButton
                class="[ ceo ]"
                x-data={`{
                    show_character_modal() {
                        show_modal({
                            partial: '${translatePath('/partials/character_modal_component/')}?${query_string({
                                character_id: ceo_character_id.toString(),
                            })}',
                        })
                    }
                }`}
                x-on:click="show_character_modal()"
            >
                <img src={ceo_image} height="496" width="940" />
            </StylessButton>
            <slot name="coceo" />
            <slot name="ships" />
        </picture>
    </div>
</FixedFluid>

<style lang="scss">
    .corporation-intro {
        position: relative;
    }

    h2 {
        font-size: var(--step-2);
    }

    img {
        image-rendering: pixelated;
    }

    .corporation-identity {
        width: 100%;
        justify-content: center;
        display: flex;

        @media screen and (max-width: 1279px) {
            display: none;
        }
    }

    picture {
        aspect-ratio: 1 / 1;
        max-width: 900px;
        position: relative;
        width: 100%;
        display: flex;

        &.ceo-right {
            justify-content: flex-end;
        }
    }

    .ceo {
        z-index: 10;
        position: relative;
        cursor: pointer;
        transform: scale(0.5);
        opacity: 0;
        height: 99%;

        img {
            mask-image: linear-gradient(to bottom, black 70%, transparent 95%);
            width: auto;
            height: 100%;
        }

        &:focus-visible {
            outline: none;
        }

        &:focus-visible,
        &:hover {
            img {
                filter: drop-shadow(0px 0px 3px rgba(255, 255, 255, 0.75));
            }
        }
    }

    @keyframes ceo {
        from {
            transform: scale(0.5);
            opacity: 0;
        }

        to {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>

<style lang="scss" is:global>
    .mirrorwed {
        transform: scaleX(-1);

        .content > *:not(.co-ceo) {
            transform: scaleX(-1);
        }
    }

    .swiper-slide-active {
        .ceo {
            animation: ceo ease-out 1.5s;
            animation-delay: 0.5s;
            animation-iteration-count: 1;
            transform-origin: bottom;
            animation-fill-mode: forwards;
        }
    }
</style>