---
import type { CargoItem } from '@dtypes/layout_components'

interface Props {
    cargo:  CargoItem[];
    gap?:   string;
}

const {
    cargo,
    gap = 'var(--space-2xs)',
} = Astro.props

import Context from '@components/layout/Context.astro';
import Wrapper from '@components/compositions/Wrapper.astro';
import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import ItemPicture from '@components/blocks/ItemPicture.astro';
import Badge from '@components/blocks/Badge.astro';
import CollapsableButton from '@components/blocks/CollapsableButton.astro';
---

<Flexblock
    gap='var(--space-3xs)'
    x-data={`{
        expanded: false,
        toggle_collapse() {
            this.expanded = !this.expanded
        }
    }`}
>
    <CollapsableButton x-on:click="toggle_collapse()">
        <FlexInline gap="var(--space-xs)">
            <slot />
        </FlexInline>
    </CollapsableButton>

    <Wrapper
        padding_block='0'
        padding_inline='var(--space-xl)'
    >
        <Context
            x-show="expanded"
            x-collapse.duration.0ms
            style="display: none"
        >
            {cargo.map( (item) =>
                <Badge
                    gap={gap}
                    size={32}
                    highlight={false}
                    title={`${item.amount} x ${item.name}`}
                >
                    <ItemPicture item_id={item.id} slot="picture" size={32} icon_quality={32} />
                </Badge>
            )}
        </Context>
    </Wrapper>
</Flexblock>