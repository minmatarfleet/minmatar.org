---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import type { SummaryCharacter, ESITokenRoles } from '@dtypes/api.minmatar.org'
import type { ButtonColors, ButtonSizes } from '@dtypes/layout_components';

interface Props {
    character:  SummaryCharacter;
    fix?:       boolean;
    color?:     ButtonColors;
    size?:      ButtonSizes;
}

const {
    character,
    fix = false,
    color = 'fleet-red',
    size = 'sm',
} = Astro.props

import { get_api_url, get_app_url } from '@helpers/env'
const FIX_CHARACTER_URL = `${get_api_url()}/api/eveonline/characters/add?redirect_url=${get_app_url()}${translatePath('/account')}`

const CURRENT_ESI_TOKEN = (character.esi_token ?? 'Basic').replace(' (SUSPENDED)', '') as ESITokenRoles
const DEFAULT_REDIRECT = `${FIX_CHARACTER_URL}&token_type=${CURRENT_ESI_TOKEN}&character_id=${character.character_id}`

import { esi_token_roles } from '@dtypes/api.minmatar.org'

const user_selectable_esi_tokens_roles = esi_token_roles.filter(token => esi_token_roles.indexOf(CURRENT_ESI_TOKEN) <= esi_token_roles.indexOf(token))

import { marked } from 'marked';
import { renderer } from '@helpers/marked';

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import Grid from '@components/compositions/Grid.astro';

import PilotBadge from '@components/blocks/PilotBadge.astro';
import DialogButton from '@components/blocks/DialogButton.astro';
import Button from '@components/blocks/Button.astro';
import Select from '@components/blocks/Select.astro';
import TutorialBadge from '@components/blocks/TutorialBadge.astro';
---

<div
    x-data={`{
        esi_token: '${CURRENT_ESI_TOKEN}',
        redirect: '${DEFAULT_REDIRECT}',
        update_fix_token_redirect() {
            this.redirect = \`${FIX_CHARACTER_URL}&token_type=\${this.esi_token}&character_id=${character.character_id}\`
        },
    }`}
    x-effect="esi_token && update_fix_token_redirect()"
>
    <DialogButton
        class:list={[ { 'action-button': !fix } ]}
        color={color}
        size={size}
        type="button"
    >
        {fix ? t('fix_esi_token') : t('refresh_esi_token')}
    
        <Flexblock gap="var(--space-l)" slot="dialog" >
            <h3>{fix ? t('fix_esi_token_dialog_title') : t('update_esi_token_dialog_title')}</h3>

            <Flexblock gap="var(--space-s)">
                <p>{fix ? t('fix_esi_token_dialog_text') : t('update_esi_token_dialog_text')}</p>

                <Grid min_item_width="250px">
                    <PilotBadge character_id={character.character_id} character_name={character.character_name}>
                        <small>{`${character.esi_token ?? 'Basic'} ${t('token')}`}</small>
                    </PilotBadge>
    
                    <Select x-model="esi_token">
                        {user_selectable_esi_tokens_roles.map(role =>
                            <option value={role}>{t(role as any)}</option>
                        )}
                    </Select>
                </Grid>
                
                <TutorialBadge>
                    <p set:html={marked.parseInline(t('esi_token_wiki'), { renderer })} />
                </TutorialBadge>
            </Flexblock>

            <FlexInline justification='flex-end'>
                <Button
                    size='sm'
                    color='green'
                    href={DEFAULT_REDIRECT}
                    x-bind:href="redirect"
                >
                    {t('continue')}
                </Button>
                <Button
                    type="button"
                    size='sm'
                    x-on:click="close_dialog()"
                >
                    {t('close')}
                </Button>
            </FlexInline>
        </Flexblock>
    </DialogButton>
</div>