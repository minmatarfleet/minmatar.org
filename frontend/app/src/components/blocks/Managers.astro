---
import { getLangFromUrl, useTranslations } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import FixedFluid from '@components/compositions/FixedFluid.astro';
import TrashIcon from '@components/icons/buttons/TrashIcon.astro';
import FluidFixed from '@components/compositions/FluidFixed.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import Button from '@components/blocks/Button.astro';
---

<ComponentBlock class="sticky top-[var(--sticky-top)]">
    <Flexblock
        gap='var(--space-s)'
        x-data={`{
            managers: [],
            add_manager(manager) {
                if (!manager) return

                const exist = this.managers.find((existing_manager) => existing_manager.name === manager.name)

                if (exist) return
                
                this.managers.push({
                    alt: manager.name+' ${t('profile_picture')}',
                    name: manager.name,
                    roles: manager.roles,
                    character_id: manager.character_id,
                })
            },
            remove_manager(name) {
                this.managers = this.managers.filter(item => item.name !== name)
            }
        }`}
    >
        <FlexInline
            justification='space-between'
            gap="var(--space-s)"
        >
            <Flexblock gap="var(--space-3xs)">
                <h2>{t('managers')}</h2>
                <small class="!mt-[var(--space-3xs)]" x-text={'`${managers.length} '+t('manager').toLowerCase()+'${managers.length != 1 ? `s` : ``}`'}>0 {t('managers').toLowerCase()}</small>
            </Flexblock>

            <VerticalCenter>
                <Button
                    size='sm'
                    type="button"
                    color={'green'}
                    class="[ w-full ]"
                    x-on:click="add_manager(await show_personas_finder('pilot'))"
                >
                    {t('add_manager')}
                </Button>
            </VerticalCenter>
        </FlexInline>

        <Flexblock gap='var(--space-3xs)'>
            <template x-for="manager in managers">
                <FixedFluid width='64px'>
                    <img x-bind:src="get_player_icon(manager.character_id)" width="64" height="64" alt="manager.alt">
                    <FluidFixed width="64px">
                        <VerticalCenter>
                            <Flexblock gap='0'>
                                <span class="text-[var(--highlight)]" x-text="manager.name" />
                                <small class="[ sentence-cap ]" x-text="manager.roles.join(', ')" />
                            </Flexblock>
                        </VerticalCenter>
                        <VerticalCenter>
                            <Button x-on:click="remove_manager(manager.name)" size='sm'>
                                <TrashIcon slot="icon" />
                            </Button>
                        </VerticalCenter>
                    </FluidFixed>
                </FixedFluid>
            </template>

            <p x-bind:class="{ hidden: managers.length > 0 }">{t('empty_managers_text')}</p>
        </Flexblock>
    </Flexblock>
</ComponentBlock>