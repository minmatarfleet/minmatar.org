---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { RepairsUI } from '@dtypes/layout_components'

interface Porps {
    repair:     RepairsUI;
    rep_icon?:  boolean;
}

const {
    repair,
    rep_icon = false,
} = Astro.props

const REP_ICON = {
    'armor': '/images/icons/1_64_9.png',
    'hull': '/images/icons/2_64_12.png',
    'shield': '/images/icons/1_64_13.png',
}

const image = rep_icon ? REP_ICON[repair.rep_type] : get_item_icon(repair.item_id)

import { get_item_icon } from '@helpers/eve_image_server';

import Flexblock from '@components/compositions/Flexblock.astro'

import Badge from '@components/blocks/Badge.astro'
import Progress from '@components/blocks/Progress.astro'
---

<Flexblock gap='0'>
    <Badge
        title={repair.name}
        image={image}
    >
        <Flexblock gap='var(--space-3xs)'>
            <small>{`${repair.amount_repaired} (${repair.avg_cycle} ${t('per_cycle_out_of')} ${repair.max_cycle}) - ${repair.cycles} ${t('cycles')}`}</small>

            <div class="[ effective-reps ]">
                <Progress
                    max="100"
                    value={repair.effective_reps}
                    data-tippy-content={`${t('effective_repairs')} ${repair.effective_reps.toFixed(0)}%`}
                    x-init="tippy($el, tippy_options)"
                >
                    {`${repair.effective_reps.toFixed(2)}%`}
                </Progress>
            </div>
        </Flexblock>
    </Badge>
</Flexblock>

<style lang="scss">
    .effective-reps {
        background-color: var(--border-color);
    }
</style>