---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { FleetItem } from '@dtypes/layout_components'

interface Props {
    fleets:     FleetItem[];
    history?: boolean;
}

const {
    fleets,
    history = false,
} = Astro.props

const FLEET_LIST_PARTIAL_URL = translatePath(`/partials/fleet_list_component?upcoming=${JSON.stringify(true)}`)

import Flexblock from '@components/compositions/Flexblock.astro';

import FleetListItem from '@components/blocks/FleetListItem.astro';
import BlockList from '@components/compositions/BlockList.astro';

const hx_attrs = {
    ...(!history && { 'hx-get': FLEET_LIST_PARTIAL_URL }),
    ...(!history && { 'hx-trigger': 'load delay:60s' }),
    ...(!history && { 'hx-swap': 'innerHTML transition:true' }),
    ...(!history && { 'hx-target': '.fleet-list-container' }),
    ...(!history && { 'hx-indicator': '.loader' }),
}
---

<BlockList
    role="list"
    gap='var(--space-3xs)'
    {...hx_attrs}
    x-on:htmx:response-error="htmx.process($el); console.log('restarted')"
    x-on:htmx:send-error="htmx.process($el); console.log('restarted')"
>

    {fleets.length == 0 &&
        <Flexblock gap='var(--space-xl)' centered={true}>
            <p>{t('fleets.upcoming.empty_message')}</p>
        </Flexblock>
    }
    
    {fleets.map((fleet) =>
        <FleetListItem role="listitem" fleet={fleet} history={history} />
    )}

</BlockList>