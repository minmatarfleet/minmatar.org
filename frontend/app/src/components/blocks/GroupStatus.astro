---
import { i18n } from '@helpers/i18n'
const { lang, t, translatePath } = i18n(Astro.url)

import type { Alert, GroupItemUI, GroupItemType } from '@dtypes/layout_components'

interface Props {
    group:      GroupItemUI;
    group_type: GroupItemType;
    alert?:     Alert | false;
}

const {
    group,
    group_type,
    alert = false,
} = Astro.props

const primary_character = Astro.cookies.has('primary_pilot') ? JSON.parse(Astro.cookies.get('primary_pilot').value) : null
const primary_character_id = primary_character ? parseInt(primary_character.character_id) : null

import { query_string } from '@helpers/string'
const GROUP_ITEM_PARTIAL_URL = translatePath('/partials/group_item_component/')

import ButtonStack from '@components/blocks/ButtonStack.astro';
import Button from '@components/blocks/Button.astro';
import ButtonAuth from '@components/blocks/ButtonAuth.astro';
import Tag from '@components/blocks/Tag.astro';
import ButtonAddPrimary from './ButtonAddPrimary.astro';

const DIALOG_TITLE = {
    'team': t('team_join_request_dialog_title'),
    'group': t('group_join_request_dialog_title')
}

const DIALOG_TEXT = {
    'team': t('team_join_request_dialog_text'),
    'group': t('group_join_request_dialog_text')
}

const LEAVE_DIALOG_TITLE = {
    'team': t('team_leave_request_dialog_title'),
    'group': t('group_leave_request_dialog_title')
}

const LEAVE_DIALOG_TEXT = {
    'team': t('team_leave_request_dialog_text'),
    'group': t('group_leave_request_dialog_text')
}

import { hours_diff, from_now_diff } from '@helpers/date'
const hours_since_last_app = hours_diff(group.last_update, new Date())
const REAPPLY_PERIOD_HOURS = 1
const is_re_applicable = group.last_update === null || (hours_since_last_app >= REAPPLY_PERIOD_HOURS)
let reapplication_date = new Date(group.last_update)
reapplication_date.setHours(reapplication_date.getHours() + REAPPLY_PERIOD_HOURS);
const TIME_TO_REAPPLY = from_now_diff(lang, reapplication_date)
const REQUEST_DENIED_TOOLTIP = t('request_denied_tooltip').replace('TIME_TO_REAPPLY', TIME_TO_REAPPLY)
---

<div
    id={`corporation-status-${group.id}`}
    x-data={`{
        init() {
            ${alert !== false ? `show_alert_dialog(${JSON.stringify(alert)})` : ''}
        }
    }`}
>
    <ButtonStack>
        {(group?.status == 'available' && !primary_character_id) &&
            <ButtonAddPrimary
                color='green'
                size='sm'
                dialog_title={DIALOG_TITLE[group_type]}
            >
                {t('join')}
            </ButtonAddPrimary>
        }
        {((group?.status == 'available' && primary_character_id) || (group?.status == 'denied' && is_re_applicable && primary_character_id)) &&
            <Button
                type="button"
                size='sm'
                color='green'
                x-bind:disabled="disabled"
                x-data={`{
                    disabled: false,
                    show_join_request_dialog() {
                        this.disabled = true
                        
                        show_confirm_dialog({
                            title: '${DIALOG_TITLE[group_type]}',
                            partial: '${translatePath('/partials/dialog_with_group/')}?${query_string({
                                name: group.name,
                                description: group.description,
                                image_url: JSON.stringify(group.image_url),
                                type: group_type,
                                message: DIALOG_TEXT[group_type]
                            })}',
                            return_on_accept: ${group.id},
                            hx: {
                                method: 'post',
                                url: '${GROUP_ITEM_PARTIAL_URL}?${query_string({
                                    id: group.id.toString(),
                                    type: group_type,
                                })}',
                                target: '#group-item-${group.id}',
                                swap: 'outerHTML transition:true'
                            }
                        }).then( (group_id) => { this.disabled = !!group_id } )
                    }
                }`}
                x-on:click="show_join_request_dialog()"
                type="button"
            >
                {t('join')}
            </Button>
        }
        {group?.status == 'unauth' &&
            <ButtonAuth
                size='sm'
                color='green'
                size='sm'
                dialog_title={DIALOG_TITLE[group_type]}
            >
                {t('join')}
            </ButtonAuth>
        }
        {group?.status == 'confirmed' &&
            <Button
                size='sm'
                type="button"
                x-data={`{
                    show_leave_group_dialog() {
                        show_confirm_dialog({
                            title: '${LEAVE_DIALOG_TITLE[group_type]}',
                            partial: '${translatePath('/partials/dialog_with_group/')}?${query_string({
                                name: group.name,
                                description: group.description,
                                image_url: JSON.stringify(group.image_url),
                                type: group_type,
                                message: LEAVE_DIALOG_TEXT[group_type]
                            })}',
                            return_on_accept: ${group.id},
                            hx: {
                                method: 'delete',
                                url: '${GROUP_ITEM_PARTIAL_URL}?${query_string({
                                    id: group.id.toString(),
                                    type: group_type,
                                })}',
                                target: '#group-item-${group.id}',
                                swap: 'outerHTML transition:true'
                            }
                        })
                    }
                }`}
                x-on:click="show_leave_group_dialog()"
            >
                {t('leave')}
            </Button>
        }
        {group?.status == 'requested' &&
            <Tag
                data-tippy-content={group_type === 'team' ? t('pending_team_request_tooltip') : t('pending_group_request_tooltip')}
                x-init="tippy($el, tippy_options)"
                color='alliance-blue'
                text={t('pending')} 
            />
        }
        {group?.status == 'denied' && !is_re_applicable &&
            <Tag
                data-tippy-content={REQUEST_DENIED_TOOLTIP}
                x-init="tippy($el, tippy_options)"
                text={t('denied')} 
            />
        }
        {group?.status == 'error' &&
            <Tag
                data-tippy-content={t('error_reload')}
                x-init="tippy($el, tippy_options)"
                text={t('error_status_corp')} 
            />
        }
    </ButtonStack>
</div>