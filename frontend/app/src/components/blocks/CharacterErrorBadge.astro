---
import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? (Astro.cookies.get('auth_token')?.value as string) : null
const user = auth_token ? jose.decodeJwt(auth_token) as User : false

import type { SummaryCharacter } from '@dtypes/api.minmatar.org'
import { get_characters_summary_sorted, get_character_error_ui } from '@helpers/fetching/characters'

let pilots:SummaryCharacter[] = []
let character_errors_count:number = 0

try {
    if (user) {
        const character_summary = await get_characters_summary_sorted(auth_token as string)
        pilots = character_summary.characters ?? []
        const character_errors = get_character_error_ui(pilots)
        character_errors_count = character_errors?.length ?? 0
    }
} catch (error) {
    console.log(error.message)
}

import NotificationBadge from '@components/blocks/NotificationBadge.astro';
---

<div x-init={`set_character_errors_count(${character_errors_count})`}>
    <template x-if="character_errors_count > 0">
        <NotificationBadge class="[ animate-fade-in-up ]" number={1} x-text="character_errors_count" />
    </template>
</div>