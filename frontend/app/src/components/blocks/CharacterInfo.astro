---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import type { User } from '@dtypes/jwt'
import * as jose from 'jose'

const auth_token = Astro.cookies.has('auth_token') ? Astro.cookies.get('auth_token').value : false
const user:User | false = auth_token ? jose.decodeJwt(auth_token) as User : false

interface Props {
    character_id:   number;
}

const {
    character_id,
} = Astro.props


import { get_player_icon } from '@helpers/eve_image_server';
import { prod_error_messages } from '@helpers/env'
import type { CharacterEvE } from '@dtypes/api.eveonline'
import { format_date_time, humanize_date_diff } from '@helpers/date'
import { get_character_by_id } from '@helpers/api.eveonline/characters'
import { get_character_faction, get_race_cover_image, parse_eve_html } from '@helpers/eve'
import { is_html } from '@helpers/string'
import type { CharacterRaces } from '@dtypes/layout_components'

let character:CharacterEvE
let get_character_error:string | false = false
let race:CharacterRaces
let cover:string

import { get_user_permissions } from '@helpers/permissions'
const user_permissions = (user ? await get_user_permissions(user?.username) : [])

try {
    character = await get_character_by_id(character_id);
    
    race = get_character_faction(character.race_id)
    cover = get_race_cover_image(race)
} catch (error) {
    get_character_error = (prod_error_messages() ? t('get_eve_character_error') : error.message)
}

const CHARACTER_MODAL_PARTIAL_URL = translatePath('/partials/character_modal_component')
const delay = parseInt(Astro.url.searchParams.get('delay') ?? '0')

import Wrapper from '@components/compositions/Wrapper.astro'
import Flexblock from '@components/compositions/Flexblock.astro'
import FixedFluid from '@components/compositions/FixedFluid.astro'

import CorporationHistory from '@components/blocks/CorporationHistory.astro'
import CorporationBadge from '@components/blocks/CorporationBadge.astro'
import AllianceBadge from '@components/blocks/AllianceBadge.astro'
import VerticalCenter from '@components/blocks/VerticalCenter.astro'
import ComponentBlock from '@components/blocks/ComponentBlock.astro'
import SectionH4 from '@components/blocks/SectionH4.astro';
import ErrorRefetch from '@components/blocks/ErrorRefetch.astro';
import CharacterLinks from '@components/blocks/CharacterLinks.astro';

import AmarrLogo from '@components/logos/AmarrLogo.astro';
import MinmatarLogo from '@components/logos/MinmatarLogo.astro';
import CaldariLogo from '@components/logos/CaldariLogo.astro';
import GallenteLogo from '@components/logos/GallenteLogo.astro'
---

<Wrapper
    id="character-info"
    class="character-info overflow-y-auto"
    padding_inline='var(--space-s)'
    padding_block='var(--space-s)'
    x-data={`{
        tippy_options: {
            delay: [ 100, 200 ],
            arrow: true,
        },
        init_js() {
            tippy('[data-tippy-content]', this.tippy_options)
        }
    }`}
    x-init="init_js()"
>
    {get_character_error ?
        <ErrorRefetch
            args={{
                partial: `${CHARACTER_MODAL_PARTIAL_URL}?character_id=${character_id}`,
                message: get_character_error,
                delay: delay,
                target: '#character-info',
            }}
        />
        :
        <div class:list={[ 'character-info-cover', cover]} />
        
        <Flexblock gap='var(--space-s)'>
            <FixedFluid
                width='192px'
                class="[ items-center ]"
            >
                <picture>
                    <img loading="lazy" width="192" height="192" src={get_player_icon(character_id, 256)} />
                </picture>
                <div class="[ fluid-fixed-l ]" class="[ w-full ]" style='--fluid-fixed--width: 32px'>
                    <VerticalCenter>
                        <Flexblock gap='var(--space-xs)' class="[ w-full ]">
                            <Flexblock gap='var(--space-3xs)' class="[ w-full ]">
                                <span class="[ text-[var(--highlight)] ]">{character.name}</span>
                                <small>Born: <span data-tippy-content={humanize_date_diff(lang, character.birthday, new Date())}>{format_date_time(lang, character.birthday)}</span></small>
                                <small>Security Status: {character.security_status.toFixed(1)}</small>
                            </Flexblock>
                            <Flexblock gap='var(--space-3xs)' class="[ w-full ]">
                                <CorporationBadge corporation={{
                                    id: character.corporation_id
                                }} />
                                {character.alliance_id &&
                                    <AllianceBadge alliance={{
                                        id: character.alliance_id
                                    }} />
                                }
                                <CharacterLinks
                                    character_id={character_id}
                                    user={user}
                                    user_permissions={user_permissions}
                                />
                            </Flexblock>
                        </Flexblock>
                    </VerticalCenter>
                    <VerticalCenter>
                        <picture>
                            {race === 'amarr' &&
                                <AmarrLogo />
                            }
                            {race === 'minmatar' &&
                                <MinmatarLogo />
                            }
                            {race === 'caldari' &&
                                <CaldariLogo />
                            }
                            {race === 'gallente' &&
                                <GallenteLogo />
                            }
                        </picture>
                    </VerticalCenter>
                </div>
            </FixedFluid>
            
            {character.description !== '' &&
                <ComponentBlock>
                    <SectionH4 heading_text={t('description')}>
                        <div class:list={{ 'eve-html': is_html(character.description) }} set:html={parse_eve_html(character.description)} />
                    </SectionH4>
                </ComponentBlock>
            }
            <ComponentBlock>
                <CorporationHistory character_id={character_id} />
            </ComponentBlock>
        </Flexblock>
    }
</Wrapper>

<style lang="scss">
    .character-info {
        width: 100%;
        max-width: 60rem;
        max-height: min(750px, 88vh);
        height: 100%;
        position: relative;
        background-position: top left;
        background-repeat: no-repeat;
        background-color: var(--background);

        > * {
            position: relative;
            z-index: 1;
        }

        .character-info-cover {
            position: absolute;
            inset: 0;
            z-index: 0;

            &.amarr-cover {
                background-image: url('/images/character-info-amarr-cover.jpg');
            }
        
            &.minmatar-cover {
                background-image: url('/images/character-info-minmatar-cover.jpg');
            }
        
            &.caldari-cover {
                background-image: url('/images/character-info-caldari-cover.jpg');
            }

            &.gallente-cover {
                background-image: url('/images/character-info-gallente-cover.jpg');
            }

            &:before {
                content: ' ';
                inset: 0;
                position: absolute;
                background-image: linear-gradient(
                    to bottom,
                    hsla(0, 0%, 7%, 0) 0%,
                    hsla(0, 0%, 7%, 0.187) 9.8%,
                    hsla(0, 0%, 7%, 0.349) 19.6%,
                    hsla(0, 0%, 7%, 0.488) 29.2%,
                    hsla(0, 0%, 7%, 0.606) 38.6%,
                    hsla(0, 0%, 7%, 0.704) 47.7%,
                    hsla(0, 0%, 7%, 0.784) 56.4%,
                    hsla(0, 0%, 7%, 0.848) 64.5%,
                    hsla(0, 0%, 7%, 0.898) 72.1%,
                    hsla(0, 0%, 7%, 0.936) 78.9%,
                    hsla(0, 0%, 7%, 0.963) 85%,
                    hsla(0, 0%, 7%, 0.981) 90.1%,
                    hsla(0, 0%, 7%, 0.992) 94.3%,
                    hsla(0, 0%, 7%, 0.998) 97.4%,
                    hsl(0, 0%, 7%) 99.3%,
                    hsl(0, 0%, 7%) 100%
                );
            }
        }

        /*> img {
            position: fixed;
            top: 0;
            right: 0;
            display: block;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: -1;
        }*/
    }
</style>