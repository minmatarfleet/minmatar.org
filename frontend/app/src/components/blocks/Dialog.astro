---
import Wrapper from '@components/compositions/Wrapper.astro';
import Flexblock from '@components/compositions/Flexblock.astro';

interface Props {
    breakout?:          boolean;
    fixed?:             boolean;
    [propName: string]: any;
}

const {
    breakout = false,
    fixed = true,
    ...attributes
} = Astro.props;

delete attributes.class
---

<div class:list={['dialog dark-transparency', { breakout: breakout }, { fixed: fixed }, Astro.props.class]} {...attributes}>
    <Wrapper padding_block='var(--space-m)' padding_inline='var(--space-m)'>
        <Flexblock gap='var(--space-m)'>
            <slot name="header" />
            <div class="[ cover-body ]">
                <slot />
            </div>
            <slot name="footer" />
        </Flexblock>
    </Wrapper>
</div>

<style lang="scss" is:global>
    .dialog {
        --pop-up--margin: 0;
        
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.7);
        border: solid 1px var(--border-color);
        opacity: 0;
        transition: all cubic-bezier(0.680, -0.550, 0.265, 1.550) 0.25s;
        pointer-events: none;
        box-shadow: 0 0 50px 0px black;

        &.open {
            z-index: var(--dialog-z-index);
            transform: translate(-50%, -50%) scale(1);
            opacity: 1;
            pointer-events: all;
        }

        &:not(.breakout) {
            max-width: calc(100% - ( var(--pop-up--margin) * 2 ));
            max-height: calc(100% - ( var(--pop-up--margin) * 2 ));
            overflow: auto;
        }

        &.fixed {
            position: fixed;
        }
    }

    @keyframes dialog {
        0% {
            opacity: 0;
            -webkit-transform: translateX(-50%) translateY(-50%) translateZ(0);
                    transform: translateX(-50%) translateY(-50%) translateZ(0);
        }
        100% {
            opacity: 1;
            -webkit-transform: translateX(-50%) translateY(-50%) translateZ(160px);
                    transform: translateX(-50%) translateY(-50%) translateZ(160px);
        }
    }
</style>