---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { ButtonSizes } from '@dtypes/layout_components';

import Button from '@components/blocks/Button.astro';
import ClipboardIcon from '@components/icons/buttons/ClipboardIcon.astro';

interface Props {
    id:                 string;
    alert_prefix?:      string;
    narrow?:            boolean;
    size?:              ButtonSizes;
    text?:              string;
    copied_text?:       string;
    iconed?:            boolean;
    [propName: string]: any;
}

const {
    id,
    alert_prefix,
    narrow = false,
    size = 'sm',
    text = t('copy'),
    copied_text = t('copied'),
    iconed = true,
    ...attributes
} = Astro.props

const COPIED_LABEL_TIME_MS = 2000

const Textarea = 'textarea';
---

<Button
    narrow={narrow}
    x-on:click.stop.prevent={`copyFitToClipboard(${ alert_prefix ? `'${id}', '${alert_prefix}'` : `'${id}'` })`}
    size={size}
    {...attributes}
    x-data={`{
        button_text: '${text}',
    }`}
    x-on:click.throttle.750ms={`button_text = '${copied_text}'; setTimeout(() => button_text = '${text}', ${COPIED_LABEL_TIME_MS})`}
    x-init="$el.removeAttribute('disabled')"
    disabled
>
    {iconed && <ClipboardIcon slot="icon" />}
    <span x-text="button_text">{text}</span>
</Button>

<Textarea class="[ hidden ]" id={id} readonly><slot /></Textarea>