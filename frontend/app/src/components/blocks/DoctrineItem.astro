---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import type { DoctrineType } from '@dtypes/layout_components'

import Flexblock from '@components/compositions/Flexblock.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import Button from '@components/blocks/Button.astro';
import ItemPicture from '@components/blocks/ItemPicture.astro';

import MagnifierIcon from '@components/icons/buttons/MagnifierIcon.astro';

interface Props {
    doctrine: DoctrineType;
    [propName: string]: any;
}

const {
    doctrine,
    ...attributes
} = Astro.props

const primary_ship = doctrine.primary_fittings[0]

const show_primary_fittings = true
const show_secondary_fittings = false
const show_support_fittings = false

const show_subtitles = ((show_primary_fittings ? 1 : 0) + (show_secondary_fittings ? 1 : 0) + (show_support_fittings ? 1 : 0)) > 1
---

<Flexblock 
    {...attributes}
    class="[ w-full ]"
    gap='var(--space-m)'
>
    <FlexInline justification='space-between'>
        <FlexInline>
            <ItemPicture item_id={primary_ship.ship_id} item_name={primary_ship.ship_name} />
            <Flexblock gap='var(--space-3xs)'>
                <h2>{doctrine.name} {t('doctrine')}</h2>
                <small>{t(doctrine.type as any)}</small>
            </Flexblock>
        </FlexInline>
        <Button href={translatePath(`/ships/doctrines/list/${doctrine.id}`)}>
            <MagnifierIcon slot="icon" />
            {t('view_details')}
        </Button>
    </FlexInline>
</Flexblock>

<style lang="scss">
    .wrapper {
        display: flex;
        align-items: center;
    }

    a[href] {
        text-decoration: none;
        color: var(--highlight);
    }
</style>