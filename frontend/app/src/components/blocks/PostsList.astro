---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { PostListUI } from '@dtypes/layout_components'

interface Porps {
    posts:          PostListUI[];
    total_pages:    number;
    current_page:   number;
}

const {
    posts,
    total_pages,
    current_page,
} = Astro.props

const pages:number[] = []
if (current_page - 2 > 0 && current_page + 1 > total_pages)
    pages.push(current_page - 2)
if (current_page - 1 > 0)
    pages.push(current_page - 1)

pages.push(current_page)

if (current_page + 1 <= total_pages)
    pages.push(current_page + 1)
if (current_page - 1 < 1 && current_page + 2 <= total_pages)
    pages.push(current_page + 2)

import Flexblock from '@components/compositions/Flexblock.astro';
import Grid from '@components/compositions/Grid.astro';
import FlexInline from '@components/compositions/FlexInline.astro';

import PostPaginationButton from '@components/blocks/PostPaginationButton.astro';
import PostItem from '@components/blocks/PostItem.astro';
---

<Flexblock id="posts-list" gap='var(--space-xl)'>
    <Grid class="[ w-full grid-fill ]" row_gap='var(--space-2xl)' column_gap='var(--space-2xl)' min_item_width='500px'>
        {posts.map(post =>
            <PostItem post={post} />
        )}
    </Grid>

    <FlexInline justification='center'>
        {total_pages > 4 &&
            <PostPaginationButton page={1} text={t('first_page')} active={current_page === 1 ? true : undefined} />
        }
        {pages.map(page =>
            <PostPaginationButton page={page} text={page.toString()} active={page === current_page ? true : undefined} />
        )}
        {total_pages > 4 &&
            <PostPaginationButton page={total_pages} text={t('last_page')} active={current_page === total_pages ? true : undefined} />
        }
    </FlexInline>
</Flexblock>