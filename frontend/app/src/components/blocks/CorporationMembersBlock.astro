---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { CorporationMembers } from '@dtypes/layout_components'

interface Props {
    corporation:  CorporationMembers;
    [propName: string]: any;
}

const {
    corporation,
    ...attributes
} = Astro.props

import BlockList from '@components/compositions/BlockList.astro';

import CorporationBadge from '@components/blocks/CorporationBadge.astro';
import CorporationMemberItem from '@components/blocks/CorporationMemberItem.astro';
import ComponentBlockHeader from '@components/blocks/ComponentBlockHeader.astro';
---

<div
    {...attributes}
    x-data={`{
        show_corporation() {
            return ("${corporation.corporation_id}" in corporations_filtered) && corporations_filtered[${corporation.corporation_id}].length > 0
        },
        get_members_count() {
            if ("${corporation.corporation_id}" in corporations_filtered_members_count)
                return corporations_filtered_members_count[${corporation.corporation_id}]

            return 0
        }
    }`}
    x-show="show_corporation()"
>
    <ComponentBlockHeader
        id={corporation.corporation_id.toString()}
    >
        <CorporationBadge
            slot="header"
            corporation={{
                id: corporation.corporation_id,
                name: corporation.corporation_name,
                size: 'lg',
            }}
        >
            <small
                x-text={'`${get_members_count()} ${get_members_count() != 1 ? `'+t('members').toLowerCase()+'` : `'+t('member').toLowerCase()+'`}`'}
            >
                {corporation.members.length} {corporation.members.length != 1 ? t('members').toLowerCase() : t('member').toLowerCase()}
            </small>
        </CorporationBadge>

        <BlockList
            gap='var(--space-3xs)'
            class="[ min-h-[64px] justify-center ]"
            x-show="expanded"
            x-collapse.duration.100ms
        >
            {corporation.members.map( (member) => 
                <CorporationMemberItem
                    member={member}
                    corporation_id={corporation.corporation_id}
                    x-data={`{
                        show_item() {
                            return ("${corporation.corporation_id}" in corporations_filtered) && corporations_filtered[${corporation.corporation_id}].includes(${member.character_id})
                        }
                    }`}
                    x-show="show_item()"
                />
            )}
        </BlockList>
    </ComponentBlockHeader>
</div>