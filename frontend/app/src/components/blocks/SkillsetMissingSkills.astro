---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { SkillsetMissingSkillUI } from '@dtypes/layout_components'

interface Props {
    skillset_missing_skills:    SkillsetMissingSkillUI;
}

const {
    skillset_missing_skills,
} = Astro.props

import TextBox from '@components/layout/TextBox.astro';
import Flexblock from '@components/compositions/Flexblock.astro';
import FixedFluid from '@components/compositions/FixedFluid.astro';
import Wrapper from '@components/compositions/Wrapper.astro';

import SkillItem from '@components/blocks/SkillItem.astro';
import ClipboardButton from '@components/blocks/ClipboardButton.astro';

const missing_skills = skillset_missing_skills.skillsets.missing_skills
const CURRENT_SKILL_LEVEL = {}
missing_skills.forEach( (skill) => {
    CURRENT_SKILL_LEVEL[skill.skill_name] = Math.min(skill.skill_level, CURRENT_SKILL_LEVEL[skill.skill_name] ?? 5)
})

const skills_names:string[] = missing_skills.map( (skill) => `${skill.skill_name} ${skill.skill_name}\n` )
const clipboard_text:string = skills_names.join('')
---

<Wrapper
    class="[ skillset-missing-skills ]"
    padding_block='var(--component-padding-block)'
    padding_inline='var(--space-l-xl)'
>
    <Flexblock>
        <FixedFluid
            class="[ items-center ]"
            fluid_first={true}
            width='150px'
        >
            {missing_skills.length > 0 &&
                <div class="[ flex justify-end ]">
                    <ClipboardButton id="copy-skills" class="[ relative w-fit ]">{clipboard_text}</ClipboardButton>
                </div>
            }
            <Flexblock gap="var(--space-3xs)">
                <h2>{skillset_missing_skills.skillsets.name} {t('skillset_missing_skills')}</h2>
                <small class="!mt-[var(--space-3xs)]">
                    {missing_skills.length} {missing_skills.length === 1 ? t('skill_missing') : t('skills_missing')}
                </small>
            </Flexblock>
        </FixedFluid>

        <Flexblock gap="var(--space-3xs)" class="[ max-h-[430px] overflow-y-auto ]">
            {missing_skills.map( (missing_skill) => 
                <SkillItem
                    current_skill_level={CURRENT_SKILL_LEVEL[missing_skill.skill_name]}
                    skill={missing_skill}
                />
            )}
            {missing_skills.length == 0 &&
                <slot>
                    <TextBox>
                        <p>{t('no_missing_skills')}</p>
                    </TextBox>
                </slot>
            }
        </Flexblock>
    </Flexblock>
</Wrapper>

<style>
    .skillset-missing-skills {
        max-height: min(800px, 90vh);
        overflow-y: auto;
    }
</style>