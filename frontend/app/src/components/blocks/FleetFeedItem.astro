---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import type { FleetItem } from '@dtypes/layout_components'

interface Props {
    fleet:  FleetItem;
}

const {
    fleet,
} = Astro.props

import FlexInline from '@components/compositions/FlexInline.astro';
import PilotBadge from '@components/blocks/PilotBadge.astro';
import Countdown from '@components/blocks/Countdown.astro';
import StylessButton from './StylessButton.astro';
---

<StylessButton href={translatePath(`/fleets/upcoming/${fleet.id}/`)}>
    <FlexInline
        justification='space-between'
        gap='0'
    >
        <PilotBadge
            class="[ basis-[220px] ]"
            character_id={fleet.fleet_commander_id}
            character_name={fleet.fleet_commander_name}
        />
        <small>{t(fleet.type as any)} {t('fleet')}</small>
        <div class="[ text-center basis-[340px] ]">
            {fleet?.status === 'cancelled' &&
                <p class="[ fleet-status-text cancelled ]">{t('cancelled')}</p>
            }

            {fleet?.status !== 'cancelled' && fleet?.tracking && !fleet?.tracking?.end_time &&
                <p class="[ fleet-status-text blink-animation ]">{t('active')}</p>
            }

            {fleet?.status !== 'cancelled' && fleet?.tracking && fleet?.tracking?.end_time &&
                <p class="[ fleet-status-text ]">{t('completed')}</p>
            }

            {fleet?.status !== 'cancelled' && !fleet?.tracking ?
                <Countdown
                    date={fleet.start_time}
                    id={fleet.id}
                    tag="countdown-fleet"
                />
                :
                <div class="[ hidden ]">
                    <Countdown
                        date={fleet.start_time}
                        id={fleet.id}
                        tag="countdown-fleet"
                    />
                </div>
            }
        </div>
    </FlexInline>
</StylessButton>

<style lang="scss">
    a {
        display: block;
        color: var(--fleet-yellow);
    }
    
    a:focus-visible {
        outline-color: var(--highlight);
        outline-style: double;
        outline-offset: -1px;
    }
    
    .fleet-status-text {
        font-family: var(--heading-font);
        font-size: var(--step-0);
        margin-left: -10px;
        margin-right: -10px;
        color: var(--highlight);
		letter-spacing: 12px;
        text-indent: 12px;
		line-height: 1;
        white-space: nowrap;
        text-transform: uppercase;

        &.cancelled {
            color: var(--fleet-red);
        }
    }
</style>