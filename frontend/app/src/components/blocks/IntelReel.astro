---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

import { marked } from 'marked';
import { renderer } from '@helpers/marked';

import FlexInline from '@components/compositions/FlexInline.astro';
import Wrapper from '@components/compositions/Wrapper.astro';

import LandingSwiper from '@components/blocks/LandingSwiper.astro';
import Button from '@components/blocks/Button.astro';
import SwiperCard from '@components/blocks/SwiperCard.astro';

import CalendarEVEIcon from '@components/icons/CalendarEVEIcon.astro';
import StructureEVEIcon from '@components/icons/StructureEVEIcon.astro';
---

<Wrapper
    class="[ intel-reel animate-fade-in-up ]"
    padding_block='0'
    padding_inline='0'
    max_width='100%'
>
    <div
        class="[ swiper ][ w-full pb-10 ]"
        id="intel-list"
    >
        <LandingSwiper>

            <!--<div class="[ swiper-slide ]">
                <ComponentBlock>
                    <Flexblock>
                        <FlexInline gap='var(--space-2xs)'>
                            <StructureEVEIcon />
                            <h2>{t('structures')}</h2>
                        </FlexInline>
                        
                        <Flexblock gap='var(--space-m)'>
                            <p set:html={marked.parseInline(t('intel.structures.leading_text'), { renderer })} />

                            <FlexInline>
                                <Button
                                    size='sm'
                                    href={translatePath('/intel/structures/')}
                                >
                                    {t('view_doctrines')}
                                </Button>
                                <Button
                                    size='sm'
                                    href={translatePath('/intel/structures/add_structure/')}
                                >
                                    {t('add_structure')}
                                </Button>
                            </FlexInline>
                        </Flexblock>
                    </Flexblock>
                </ComponentBlock>
            </div> -->

            <div class="[ swiper-slide ]">
                <SwiperCard class="[ animate-delay-0 ]" cover='/images/timers-tile-background.jpg'>
                    <FlexInline slot="header" gap='var(--space-2xs)'>
                        <CalendarEVEIcon />
                        <h2>{t('structure_timers')}</h2>
                    </FlexInline>
                        
                    <p>{t('intel.timers.leading_text')}</p>
                    <FlexInline>
                        <Button size='sm' href={translatePath('/intel/timers/active/')}>
                            {t('view')}
                        </Button>
                        <Button size='sm' href={translatePath('/intel/timers/add/')}>
                            {t('add_timer')}
                        </Button>
                    </FlexInline>
                </SwiperCard>
            </div>
        </LandingSwiper>
    </div>

    <div class="[ swiper-button-prev hidden lg:block ]"></div>
    <div class="[ swiper-button-next hidden lg:block ]"></div>
</Wrapper>

<style lang="scss">
    .intel-reel {
        position: relative;
    }

    .swiper-button-prev,
    .swiper-button-next {
        --swiper-navigation-color: var(--highlight);
        --swiper-navigation-sides-offset: -46px;

        opacity: 0;
    }

    .swiper-initialized ~ .swiper-button-prev,
    .swiper-initialized ~ .swiper-button-next {
        opacity: 1;
    }

    .swiper-initialized ~ .swiper-button-next.swiper-button-disabled,
    .swiper-initialized ~ .swiper-button-prev.swiper-button-disabled {
        opacity: 0;
    }

    .swiper-button-next.swiper-button-disabled,
    .swiper-button-prev.swiper-button-disabled {
        --swiper-navigation-color: var(--fleet-yellow);
        opacity: 1;
    }

    .swiper-button-prev {
        transform: translateY(-1.25rem);
    }

    .swiper-button-next {
        transform: translateY(-1.25rem);
    }

    .swiper-slide {
        width: min(100%, 700px);
    }
</style>