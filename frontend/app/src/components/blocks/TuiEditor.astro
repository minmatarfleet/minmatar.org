---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import '@toast-ui/editor/dist/toastui-editor.css';
import '@toast-ui/editor/dist/theme/toastui-editor-dark.css';
import { marked } from 'marked';
import RifterIcon from '@components/icons/RifterIcon.astro';
import Wrapper from '@components/compositions/Wrapper.astro';

interface Props {
    content?:   string;
}

const {
    content = '',
} = Astro.props
---

<Wrapper
    class="[ tui-editor-loader ]"
    centered={true}
    padding_block='var(--space-3xl)'
>
    <RifterIcon />
</Wrapper>
<div id="editor" style="display: none" set:html={content} />

<script>
    const { Editor } = await import('@toast-ui/editor')

    let throttle_timer
    const content = document.getElementById('editor')?.innerHTML
    var editor = new Editor({
        el: document.querySelector('#editor'),
        minHeight: '500px',
        height: 'auto',
        initialEditType: 'markdown',
        previewStyle: 'vertical',
        theme: 'dark',
        hideModeSwitch: true,
        autofocus: false,
        toolbarItems: [
          ['heading', 'bold', 'italic', 'strike'],
          ['hr', 'quote'],
          ['ul', 'ol'],
          ['table', 'image', 'link'],
          ['code', 'codeblock'],
        ],
        events: {
            load: () => {
                const loader = document.querySelector('.tui-editor-loader')
                if (loader) loader.remove()
                
                const editor = document.getElementById('editor')
                if (editor) editor.style.display = 'block'
            },
            change: () => {
                if (throttle_timer)
                    clearTimeout(throttle_timer)

                throttle_timer = setTimeout(function () {
                    const content_textarea = document.getElementById('post-content') as HTMLTextAreaElement
                    if (content_textarea) content_textarea.value = editor.getMarkdown()
                }, 750)
            }
        }
    })

    editor.setMarkdown(content)
</script>

<style lang="scss" is:global>
    .toastui-editor-mode-switch,
    .toastui-editor-defaultUI-toolbar,
    .toastui-editor-defaultUI {
        border-radius: 0;
        font-family: var(--content-font);
    }

    .toastui-editor-toolbar {
        height: auto;
        position: sticky !important;
        z-index: 21;
    }

    .toastui-editor-dark .toastui-editor-defaultUI-toolbar {
        background-color: var(--light-transparency-background);
        backdrop-filter: blur(var(--transparency-backdrop-blur));
        border: none;
        margin-left: calc(var(--max-text-width) + var(--space-m));
    }

    .toastui-editor-defaultUI-toolbar {
        padding-inline: var(--space-3xs);
    }

    .toastui-editor-defaultUI-toolbar button {
        border-radius: 0;
    }

    .toastui-editor-dark .toastui-editor-toolbar-icons {
        background-image: url(../images/TUI-editor-sprite.png);
        background-color: var(--fleet-red);
        transition: var(--fast-transition);
        border-color: var(--fleet-red);
    }

    .toastui-editor-dark .toastui-editor-toolbar-icons:not(:disabled):hover {
        background-color: var(--fleet-red);
        transform: scale(1.1);
        border-color: var(--fleet-red);
    }

    .toastui-editor-dark .toastui-editor-toolbar-divider {
        background-color: transparent;
    }

    .toastui-editor-dark.toastui-editor-defaultUI {
        border: none;
    }

    .toastui-editor-dark .toastui-editor {
        background-color: var(--background);
        border: solid 1px var(--border-color);
    }

    .toastui-editor-dark .toastui-editor-md-container {
        background-color: transparent;
        flex-direction: row-reverse;
        overflow: visible;
    }

    .toastui-editor-md-splitter {
        display: none !important;
    }

    .toastui-editor-contents {
        color: var(--foreground);
        font-family: var(--montserrat);
    }

    .toastui-editor-dark .toastui-editor-contents p {
        color: var(--foreground);
    }

    .toastui-editor-dark .ProseMirror {
        color: var(--highlight);
    }

    .toastui-editor-contents h1,
    .toastui-editor-contents h2,
    .toastui-editor-contents h3,
    .toastui-editor-contents h4,
    .toastui-editor-contents h5,
    .toastui-editor-contents h6 {
        font-weight: normal;
        border: none;
    }

    .toastui-editor-toolbar-item-wrapper {
        display: none !important;
    }

    .toastui-editor-tooltip {
        background-color: #171616  !important;
        border-color: var(--border-color) !important;
        border-radius: 0 !important;
        filter:  drop-shadow( 1px  0px 0px var(--border-color)) drop-shadow(-1px  0px 0px var(--border-color)) drop-shadow( 0px  1px 0px var(--border-color)) drop-shadow( 0px -1px 0px var(--border-color));
        font-family: var(--content-font);
        color: var(--foreground);
        margin-left: calc(-100% - 245px);

        .arrow {
            background-color: #171616  !important;
        }
    }

    .toastui-editor-md-preview {
        padding-left: 0 !important;
        padding-top: 0;
        padding-right: var(--space-m);
        flex-basis: calc(var(--max-text-width) + var(--space-m));
        flex-grow: 1;
    }

    .toastui-editor {
        flex-basis: 0;
        flex-grow: 999;
        max-width: 744px;
    }

    .toastui-editor-md-preview-highlight {
        border-radius: 0 !important;
        // outline: solid 1px var(--border-color);
        background-color: var(--border-color-hover);

        &:before,
        &:after {
            display: none;
        }
    }

    .ProseMirror {
        font-family: var(--content-font);
        font-size: var(--step--1);
    }

    .toastui-editor-md-container .toastui-editor-md-preview .toastui-editor-contents {
        padding: 1px;
    }

    .toastui-editor-contents,
    .toastui-editor-contents ol,
    .toastui-editor-contents ul {
        > * {
            margin: 0 !important;
            padding: 0 !important;
            margin-block: 0 !important;
        }

        > * + * {
            margin-block-start: var(--space-m) !important;
        }
    }

    .toastui-editor-contents ul {
        padding-left: 19px !important;
        list-style-type: square;
    }

    .toastui-editor-contents ul > li::before {
        display: none;
    }

    .toastui-editor-contents ul > li::marker {
        font-size: var(--step-0);
        color: var(--highlight);
    }

    .toastui-editor-contents ol > li::before {
        font-family: var(--heading-font);
        font-size: var(--step--1);
        text-align: center;
        top: 6px;
        color: var(--highlight);
    }

    .toastui-editor-dark .toastui-editor-contents hr {
        border-color: var(--border-color);
    }

    .toastui-editor-defaultUI .ProseMirror {
        padding: 60px 80px; // 5px 8px;
    }

    .toastui-editor-dark .toastui-editor-contents a {
        color: var(--highlight);
        text-decoration: none;

        &:hover {
            color: var(--highlight);
        }
    }

    .toastui-editor-ok-button,
    .toastui-editor-close-button,
    .toastui-editor-dark .toastui-editor-popup-body .toastui-editor-file-select-button {
        --background-color: var(--fleet-red);
        --button-color: var(--fleet-yellow);
        --font-size: var(--step--0);

        display: inline-block;
        text-decoration: none;
        font-size: var(--font-size);
        font-family: var(--button-font);
        text-transform: uppercase;
        text-align: left;
        border: solid 1px var(--background-color) !important;
        color: var(--button-color) !important;
        background-color: var(--background-color) !important;
        padding: var(--space-2xs) var(--space-xs-s) !important;
        align-items: center;
        transition: var(--fast-transition);
        padding-inline: var(--space-s) !important;
        border-radius: 0 !important;
        height: auto !important;
        font-weight: 400 !important;
        line-height: 1.1 !important;

        &.narrow {
            padding-inline: var(--space-2xs);
        }

        :global(svg) {
            scale: 0.85;
        }

        &:focus-visible {
            outline: none;
        }

        @media (hover: hover) {
            &:focus-visible,
            &:hover:not([disabled]) {
                cursor: pointer;
                transform: scale(1.05);
            }

            &[data-size="sm"] {
                &:focus-visible,
                &:hover:not([disabled]) {
                    transform: scale(1.1);
                }
            }
        }
    }

    .toastui-editor-ok-button {
        --background-color: var(--green);
    }

    .toastui-editor-tabs {
        display: flex;
        gap: var(--space-m);
    }

    .toastui-editor-dark .toastui-editor-popup-add-image .toastui-editor-tabs .tab-item {
        font-weight: 400;
        color: var(--fleet-yellow);
        border: none !important;
        padding: 0 !important;
        width: auto;
        height: auto;
        line-height: 1.1;
    }

    .toastui-editor-dark .toastui-editor-popup-add-image .toastui-editor-tabs .tab-item.active {
        font-weight: 600;
        color: var(--highlight);
    }

    .toastui-editor-popup {
        border: none !important;
        background-color: var(--light-transparency-background) !important;
        backdrop-filter: blur(var(--transparency-backdrop-blur));
        border: solid 1px var(--border-color) !important;
    }

    .toastui-editor-popup-add-link .toastui-editor-popup-body, .toastui-editor-popup-add-image .toastui-editor-popup-body {
        padding: var(--space-s);
    }
</style>