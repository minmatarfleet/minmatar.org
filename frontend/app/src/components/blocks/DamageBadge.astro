---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import type { Damage } from '@dtypes/layout_components'

interface Props {
    damage:    Damage;
}

const { damage } = Astro.props

import { get_item_icon } from '@helpers/eve_image_server'

import Flexblock from '@components/compositions/Flexblock.astro'
import FlexInline from '@components/compositions/FlexInline.astro'

import Badge from '@components/blocks/Badge.astro'
import Square from '@components/blocks/Square.astro'
---

<Badge
    title={damage.name}
    image={get_item_icon(damage.item_type)}
>
    <Flexblock gap='0'>
        {damage.volleys_to > 0 &&
            <FlexInline class="[ !items-baseline ]" gap='var(--space-3xs)'>
                <Square
                    color='alliance-blue'
                    x-init="tippy($el, tippy_options)"
                    data-tippy-content={t('damage_to_enemy')}
                />
                <small>{damage.total_to.toLocaleString()} ({damage.dps_to.toLocaleString()} {t('per_volley')}) - {damage.volleys_to.toLocaleString()} {t('volleys')}</small>
            </FlexInline>
        }
        {damage.volleys_from > 0 &&
            <FlexInline class="[ !items-baseline ]" gap='var(--space-3xs)'>
                <Square
                    color='fleet-red'
                    x-init="tippy($el, tippy_options)"
                    data-tippy-content={t('damage_from_enemy')}
                />
                <small>{damage.total_from.toLocaleString()} ({damage.dps_from.toLocaleString()} {t('per_volley')}) - {damage.volleys_from.toLocaleString()} {t('volleys')}</small>
            </FlexInline>
        }
    </Flexblock>
</Badge>