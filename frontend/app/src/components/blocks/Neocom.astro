---
import { i18n } from '@helpers/i18n'
const { translatePath } = i18n(Astro.url)

interface Props {
    user_is_officer:    boolean;
    user_is_director:   boolean;
    user_is_superadmin: boolean;
    authenticated:      boolean;
    user_permissions:   string[];
}

const {
    user_is_officer,
    user_is_director,
    user_is_superadmin,
    authenticated,
    user_permissions,
} = Astro.props

const primary_character = Astro.cookies.has('primary_pilot')

const can_view_intel = user_permissions.includes('structures.view_evestructuretimer')
const can_view_posts = user_permissions.includes('posts.add_evepost')

import { is_prod_mode } from '@helpers/env'

import Flexblock from '@components/compositions/Flexblock.astro';

import NeocomButton from '@components/blocks/NeocomButton.astro';
import UserAuth from '@components/UserAuth.astro';

import ShipTreeEvEIcon from '@components/icons/ShipTreeEvEIcon.astro';
import FleetEvEIcon from '@components/icons/FleetEvEIcon.astro';
import IntelEvEIcon from '@components/icons/IntelEvEIcon.astro';
import AssetsEvEIcon from '@components/icons/AssetsEvEIcon.astro';
import NotepadEvEIcon from '@components/icons/NotepadEvEIcon.astro';
import MarketEvEIcon from '@components/icons/MarketEvEIcon.astro';
import ZkillboardEvEIcon from '@components/icons/ZkillboardEvEIcon.astro';
import AllianceEvEIcon from '@components/icons/AllianceEvEIcon.astro';
import FleetLogo from '@components/icons/FleetLogo.astro';
import TutorialIcon from '@components/icons/TutorialIcon.astro';

let hour = new Date().getUTCHours()
let minute = new Date().getUTCMinutes()

const time =  `${hour < 10 ? '0' : ''}${hour}:${minute < 10 ? '0' : ''}${minute}`

const page = Astro.url.pathname
---

<header class="[ neocom ] [ transparency ]">
    <nav class="[ flex-block-l ]">
        <Flexblock class="[ grow ]" gap='var(--space-3xs)'>
            <Flexblock gap="0">
                <NeocomButton
                    href={translatePath('/')}
                    overlay={true}
                    title='index.page_title'
                    description='index.description'
                >
                    <FleetLogo square={true} />
                </NeocomButton>
                <UserAuth active={page.startsWith(translatePath('/account/'))} />
            </Flexblock>
            <NeocomButton
                active={page.startsWith(translatePath('/alliance/'))}
                title='neocom.alliance'
                description={
                    user_is_director && user_is_officer ? 'alliance.description.directors_officers' :
                    user_is_director ? 'alliance.description.directors' :
                    user_is_officer ? 'alliance.description.officers' :
                    'alliance.description'
                }
                href={translatePath('/alliance/')}
            >
                <AllianceEvEIcon />
            </NeocomButton>
            <NeocomButton
                active={page.startsWith(translatePath('/ships/'))}
                title='neocom.ships'
                description='ships.description'
                href={translatePath('/ships/')}
            >
                <ShipTreeEvEIcon />
            </NeocomButton>
            <NeocomButton
                active={page.startsWith(translatePath('/fleets/'))}
                title='neocom.fleets'
                description='fleets.description'
                href={translatePath('/fleets/upcoming/')}
            >
                <FleetEvEIcon />
            </NeocomButton>
            <NeocomButton
                active={page.startsWith(translatePath('/market/'))}
                title='neocom.market'
                description='market.description'
                href={translatePath('/market/')}
            >
                <MarketEvEIcon />
            </NeocomButton>
            <NeocomButton
                active={page.startsWith(translatePath('/intel/'))}
                title='neocom.intel'
                description='intel.description'
                href={translatePath('/intel/')}
            >
                <IntelEvEIcon />
            </NeocomButton>
            {primary_character &&
                <NeocomButton
                    active={page.startsWith(translatePath('/character/assets/user/'))}
                    title='neocom.assets'
                    description='assets.description'
                    href={translatePath('/character/assets/user/')}
                >
                    <AssetsEvEIcon />
                </NeocomButton>
            }
            {can_view_posts &&
                <NeocomButton
                    active={page.startsWith(translatePath('/posts/'))}
                    title='neocom.manage_posts'
                    description='posts.description'
                    href={translatePath('/posts/')}
                >
                    <NotepadEvEIcon />
                </NeocomButton>
            }
            {!is_prod_mode() &&
                <NeocomButton
                    title='neocom.zkillboard'
                    description='zkillboard_description'
                    tag="dev"
                    href="https://zkillboard.com/alliance/99011978"
                    external={true}
                >
                    <ZkillboardEvEIcon />
                </NeocomButton>
            }
        </Flexblock>
        <Flexblock
            class="[ neocom-buttom shrink ]"
            gap='var(--space-3xs)'
        >
            <NeocomButton
                title='neocom.help'
                description='help_description'
                x-data={`{
                    show_help_modal() {
                        show_modal({
                            partial: '${translatePath('/partials/help_modal_component/')}',
                        })
                    }
                }`}
                x-on:click="show_help_modal()"
            >
                <TutorialIcon />
            </NeocomButton>
        </Flexblock>
    </nav>
    <Flexblock
        gap="0"
        x-data="neocom_clock()"
        x-init="init()"
    >
        <div class="[ loader-wrapper ]">
            <span class="loader active"></span>
        </div>
        <time class="[ clock ]" x-text="getTime()">{time}</time>
    </Flexblock>
</header>

<style lang="scss">
    .neocom {
        position: fixed;
        z-index: var(--neocom-z-index);
        top: 0;
        left: 0;
        height: 100%;
        max-width: 48px;
        overflow-y: auto;
        display: flex;
        justify-content: space-between;
        flex-direction: column;

        nav {
            flex-grow: 1;
            overflow: auto;
        }
    }

    .clock {
        text-align: center;
        color: var(--highlight);
        width: 48px;
        font-size: var(--step--2);
        background-color: rgba(0, 0, 0, 0.6);
    }

    .flex-block-l {
        --flex-block--space: var(--space-2xs);
    }

    .neocom-buttom {
        border-top: solid 1px var(--border-color);
    }

    .loader-wrapper {
        border-top: solid 1px var(--border-color);
        width: 48px;
        height: 48px;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.3);
        flex-shrink: 0;
    }

    .loader {
        z-index: var(--neocom-z-index);
        width: 24px;
        height: 24px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        display: inline-block;
        box-sizing: border-box;

        &.htmx-request,
        &.active {
            animation: rotation 1s linear infinite, pulse .5s ease-in-out both;
            border-bottom-color: rgba(255, 255, 255, 0.75);
        }
    }

    @keyframes rotation {
        0% {
            // transform: rotate(0deg);
            rotate: 0deg;
        }
        100% {
            // transform: rotate(360deg);
            rotate: 360deg;
        }
    }

    @keyframes pulse {
        0% {
            scale: 1;
        }
        30% {
            scale: 1.25;
        }
        40% {
            scale: .75;
        }
        50% {
            scale: 1.15;
        }
        65% {
            scale: .95;
        }
        75% {
            scale: 1.05;
        }
        100% {
            scale: 1;
        }
    }
</style>