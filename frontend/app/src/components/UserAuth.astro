---
import { i18n } from '@helpers/i18n'
const { t, translatePath } = i18n(Astro.url)

import { get_player_icon } from '@helpers/eve_image_server'

interface Props {
    active?: boolean;
}

const {
    active = false,
} = Astro.props;

import { get_auth_url } from '@helpers/env'

const is_auth = Astro.cookies.has('auth_token')
const href = is_auth ? translatePath('/account/') : get_auth_url()
const primary_pilot = Astro.cookies.has('primary_pilot') ? JSON.parse(Astro.cookies.get('primary_pilot')?.value as string) : null
const primary_pilot_avatar = primary_pilot ? get_player_icon(primary_pilot.character_id) : null
const primary_pilot_name = primary_pilot ? primary_pilot.character_name : null
const discord_avatar = Astro.cookies.has('avatar') ? (Astro.cookies.get('avatar')?.value as string) : null
const no_pilot_avatar = discord_avatar && discord_avatar.endsWith('None.png') ? '/images/no_pilot.jpg' : discord_avatar
const portrait = primary_pilot_avatar ?? no_pilot_avatar

const title = is_auth ? 'account.page_title' : 'authentication'
const description = is_auth ? 'account.description' : 'authentication_description'

import Tippy from '@components/blocks/Tippy.astro';
---

<a href={href} class:list={[ { active: active } ]}>
    <Tippy
        data-tippy-placement="right"
        partial={`${translatePath('/partials/normal_tooltip')}?title=${title}${description ? `&description=${description}` : ''}`}
        height='70px'
        width='340px'
        element='div'
    >
        <img loading="lazy"
            class="confetti-image"
            src={is_auth && portrait ? portrait : "https://images.evetech.net/characters/1/portrait?size=64"}
            width="48"
            height="48"
            alt={primary_pilot_name ? primary_pilot_name : t('unknown_pilot')}
        />
    </Tippy>
</a>

<style lang="scss">
    a {
        text-decoration: none;
        display: flex;
        position: relative;
        height: 48px;
        width: 48px;
        justify-content: center;
        align-items: center;

        &:after {
            content: ' ';
            position: absolute;
            right: 0;
            width: 2px;
            top: 15px;
            bottom: 15px;
            background-color: transparent;
            transition: var(--fast-transition);
        }

        &:active:after,
        &:focus:after {
            background-color: var(--highlight);
        }

        &.active:before {
            content: ' ';
            z-index: 1;
            position: absolute;
            border-radius: 50%;
            filter: blur(4px);
            right: 2px;
            width: 3px;
            top: 12px;
            bottom: 12px;
            background-color: var(--highlight);
        }

        &.active:after {
            content: ' ';
            position: absolute;
            right: 0;
            width: 2px;
            top: 10px;
            bottom: 10px;
            background-color: var(--highlight);
        }

        &:focus-visible {
            outline: none;

            img {
                filter: brightness(1.3);
            }
        }
    }

    img {
        transition: var(--fast-transition);
        filter: brightness(1);

        &:hover {
            filter: brightness(1.3);
        }
    }
</style>