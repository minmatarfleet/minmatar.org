---
import { i18n } from '@helpers/i18n'
const { t } = i18n(Astro.url)

import { marked } from 'marked';

import type { PageCoverOptions } from '@dtypes/layout_components'

interface Props {
    cover?:                 false | PageCoverOptions;
    neocom?:                boolean;
    [propName: string]:     any;
}

const {
    cover,
    neocom = true,
    ...attributes
} = Astro.props;

import Wrapper from '@components/compositions/Wrapper.astro';
import PageHeader from '@components/page/partials/PageHeader.astro';
import PageBody from '@components/page/partials/PageBody.astro';
import PageCover from '@components/page/partials/PageCover.astro';
import DebugTag from '@components/blocks/DebugTag.astro';
---

<main id="content" {...attributes}>
    {cover && <PageCover {...cover} /> }

    <PageHeader max_width="var(--max-content-width)" neocom={neocom}>
        <slot name="header">
            <DebugTag set:html={marked.parse(t('missing_header_slot'))} />
        </slot>
        <slot name="subheader" slot="subheader" />
    </PageHeader>


    <PageBody max_width="var(--max-content-width)" neocom={neocom}>
        <Wrapper max_width="var(--max-col-width)" padding_inline="0" padding_block="0" class="[ w-full ]">
            <slot />
        </Wrapper>
    </PageBody>
</main>