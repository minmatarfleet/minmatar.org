---
interface Props {
    max_width?: string;
    [propName: string]: any;
}

const {
    max_width = '80rem',
} = Astro.props;

import Wrapper from '@components/compositions/Wrapper.astro';

const subheader_content = await Astro.slots.render('subheader');
---

<div
    class="[ post-header ][ mt-[var(--space-xl)] ]"
    x-data={`{
        sticky: false,
    }`}
    x-bind:class="sticky ? 'sticky' : ''"
>
    <div
        class="[ relative z-10 ]"
        x-intersect:leave.full="sticky = true"
        x-intersect.enter.full="sticky = false"
    >
        <Wrapper class="[ main-bar ][ w-full ]" padding_block="var(--space-xs)" max_width={max_width} neocom={true} centered={true}>
            <slot />
        </Wrapper>
    </div>

    {subheader_content !== '' &&
        <div
            class="[ subheader-bar ]"
        >
            <Wrapper centered={true} max_width="var(--max-content-width)" padding_block='var(--space-2xs)'>
                <Wrapper max_width="var(--max-col-width)" padding_inline="0" padding_block="0" class="[ w-full ]">
                    <slot name="subheader" />
                </Wrapper>
            </Wrapper>
        </div>
    }
</div>

<style lang="scss">
    .sticky {
        background-color: var(--dark-transparency-background);
        backdrop-filter: blur(var(--transparency-backdrop-blur));
    }

    :global(.post-header > .wrapper > .flex-inline) {
        width: 100%;
    }
    
    .post-header {
        transition: var(--fast-transition);
        position: sticky;
        top: -2px;
        z-index: var(--header-z-index);

        &.sticky {
            box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.75);

            .subheader-bar {
                border-top: solid 1px var(--border-color);
            }
        }

        .subheader-bar {
            border-top: solid 1px transparent;
        }

        .main-bar {
            position: relative;
            z-index: 1;
            min-height: var(--space-xl-2xl);
            display: flex;
            width: 100%;
            justify-content: stretch;
        }
    }
</style>