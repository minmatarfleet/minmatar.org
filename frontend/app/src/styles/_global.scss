:root {
    color-scheme: dark;
}

html,
body,
.viewport-layout-inner {
    width: 100%;
    accent-color: var(--fleet-red);
}

.viewport-layout {
    min-height: 100vh;
    padding: 0;
    margin: 0;
    // overflow: hidden;

    p {
        font-size: var(--step-0);
    }

	> main {
		position: relative;
	}
}

.viewport-cover {
    position: fixed;
    inset: 0;
    overflow: hidden;
    z-index: -1;

    img {
        position: absolute;
        top: 0;
        right: 0;
        display: block;
        object-fit: cover;
    }
}

.component {
    // background-color: var(--component-background);

    h4, p, li {
        font-size: var(--step--1);
    }
}

a[href] {
    color: var(--highlight);
    text-decoration: none;
}

@media (hover: hover) {
    /* width */
    ::-webkit-scrollbar {
        width: var(--space-3xs);
        height: var(--space-3xs);
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: transparent;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #444;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
        background: #555;
    }
}

.sentence-cap::first-letter {
    text-transform: capitalize;
}

.visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto;
    margin: 0;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
    left: 0;
    top: 0;
}

pre {
    background-color: var(--component-background);
    padding: var(--space-3xs);
    border: solod 1px var(--border-color);
    max-width: 100%;
    overflow-x: auto;
}

code {
    background-color: var(--component-background);
    color: var(--highlight);
    padding-inline: var(--space-3xs);
}

.rifter-dialog,
.rifter-modal {
    display: flex;
    min-height: 128px;
    align-items: center;
    justify-content: center;
}

.rifter-modal {
    min-height: min(750px, 88vh);
}

.eve-html {
    a[href]:not([class]) {
        color: inherit
    }
    
    padding: var(--space-3xs) var(--space-2xs);
    border: solid 1px var(--border-color);
    background-color: var(--background);
    max-height: 400px;
    overflow-y: auto;
}

.border {
    border: solid 1px var(--border-color);
}

.border-bottom {
    border-bottom: solid 1px var(--border-color);
}

.correct-gaps > [style="display: none;"] ~ * {
    margin-block-start: 0 !important;
}

.correct-gaps > :not([style="display: none;"]) ~ * {
    margin-block-start: var(--space-s) !important;
}

.bump {
    position: relative;
    z-index: 1;
}

.shadow-text {
    filter: drop-shadow(0px 1px 0px rgba(0, 0, 0, 0.3));
}

a:focus-visible {
    outline-color: var(--highlight);
    outline-style: double;
}

.highlight {
    color: var(--highlight);
}

ul {
    list-style: square;
    padding-inline-start: 17px;
}

.satured {
    filter: saturate(1) !important;
}

.desatured {
    filter: saturate(0);
}

.text-red {
    color: var(--fleet-red);
}

.text-green {
    color: var(--green);
}

.text-status-1 {
    color: var(--security-status-1)    
}

.text-status-point-9 {
    color: var(--security-status-point-9)    
}

.text-status-point-8 {
    color: var(--security-status-point-8)    
}

.text-status-point-7 {
    color: var(--security-status-point-7)    
}

.text-status-point-6 {
    color: var(--security-status-point-6)    
}

.text-status-point-5 {
    color: var(--security-status-point-5)    
}

.text-status-point-4 {
    color: var(--security-status-point-4)    
}

.text-status-point-3 {
    color: var(--security-status-point-3)    
}

.text-status-point-2 {
    color: var(--security-status-point-2)    
}

.text-status-point-1 {
    color: var(--security-status-point-1)    
}

.text-status-null {
    color: var(--security-status-null)    
}

.card-animated {
    picture.animated {
        overflow: hidden;
        
        img {
            transform: scale(1);
            transition: var(--fast-transition);
        }
    }

    &:hover {
        picture.animated img {
            transform: scale(1.1);
        }
    }
}

ul {
    list-style-type: square;
}

ol,
ul {
    padding-left: 19px;

    > li::marker {
        color: var(--highlight);
    }
}