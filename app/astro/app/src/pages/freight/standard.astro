---
import { getLangFromUrl, useTranslations, useTranslatedPath } from '@i18n/utils';
import calculation from '@json/page/freight/standard/calculate.example.json';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

Astro.cookies.delete('contract', { path: '/freight/' })

if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        calculation.collateral = parseFloat((data.get("collateral") as string).replaceAll(',', ''));
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
    // TODO: Replace the static JSON value `calculation` with the endpoint request using the id
    //                                ðŸ‘‡
    Astro.cookies.set('contract', calculation, { path: '/freight/' })
    Astro.cookies.set('from', 'standard', { path: '/freight/' })

    return Astro.redirect(translatePath('/freight/standard/contract'))
}

import routes_options from '@json/hosted/freight.standard.route.options.json';
import sizes_options from '@json/hosted/freight.standard.size.options.json';

import { marked } from 'marked';

import Flexblock from '@components/compositions/Flexblock.astro';
import Viewport from '@layouts/Viewport.astro';
import Wrapper from '@components/compositions/Wrapper.astro';
import VerticalCenter from '@components/blocks/VerticalCenter.astro';
import Button from '@components/blocks/Button.astro';
import ComponentBlock from '@components/blocks/ComponentBlock.astro';
import AddIcon from '@components/icons/buttons/AddIcon.astro';
import HistoryIcon from '@components/icons/buttons/HistoryIcon.astro';
import TutorialIcon from '@components/icons/TutorialIcon.astro';
import FixedFluid from '@components/compositions/FixedFluid.astro';
import FlexInline from '@components/compositions/FlexInline.astro';
import Select from '@components/blocks/Select.astro';
import Input from '@components/blocks/Input.astro';

import PageCover from '@components/page/PageCover.astro';
import PageHeader from '@components/page/PageHeader.astro';
import PageTitle from '@components/page/PageTitle.astro';
import PageBody from '@components/page/PageBody.astro';

const page_title = t('freight.standard.page_title');
---

<Viewport title={page_title}>
    <PageCover
        image="/images/freight-service-cover.jpg"
        image_990="/images/freight-service-cover-990.jpg"
        alt={t('freight.cover_alt')}
        animated={false}
        scrollable={true}
        overlay={true}
    />

	<main id="content">
        <PageHeader max_width="var(--max-content-width)">
            <FlexInline justification='space-between'>
                <FlexInline>
                    <PageTitle>
                        {page_title}
                    </PageTitle>
                </FlexInline>
                <FlexInline>
                    <Button color={'green'} class="[ !hidden md:!flex ]" href={translatePath('/freight/wormhole/')}>
                        <AddIcon slot="icon" />
                        {t('wormhole_freight')}
                    </Button>
                    <Button class="[ !hidden lg:!flex ]" href={translatePath('/freight/summary/')}>
                        <HistoryIcon slot="icon" />
                        {t('30_day_summary')}
                    </Button>
                </FlexInline>
            </FlexInline>
        </PageHeader>

        <PageBody max_width="var(--max-content-width)">
            <FixedFluid width="var(--max-text-width)" breakpoint="30%" gap="var(--space-xl)">
                <Wrapper max_width="var(--max-text-width)" padding_inline="0" padding_block="0">
                    <Flexblock>
                        <ComponentBlock padding_block="0" padding_inline="0">
                            <FixedFluid width="96px" gap="0" centered={true}>
                                <picture class="[ hidden sm:block ]">
                                    <img
                                        class="[ object-cover h-full ]"
                                        height="96"
                                        width="96"
                                        src="/images/jita-logo.jpg"
                                        alt="Jita Trade Hub icon"
                                    />
                                </picture>
                                <VerticalCenter>
                                    <Wrapper
                                        padding_block="var(--space-2xs)"
                                        padding_inline="var(--space-s)"
                                        set:html={marked.parse(t('freight.standard.jita_hauling_ads'))}
                                    />
                                </VerticalCenter>
                            </FixedFluid>
                        </ComponentBlock>

                        <Flexblock gap='var(--space-3xs)'>
                            <ComponentBlock>
                                <form method="POST">
                                    <Flexblock class="[ w-full ]" gap='var(--space-m)'>
                                        <h2>{t('freight.standard.calculator_title')}</h2>
                                        
                                        <Flexblock>
                                            <VerticalCenter>
                                                <FixedFluid class="[ w-full items-center ]" gap="var(--space-3xs)" width="250px" breakpoint="60%">
                                                    <label for="route">{t('route')}</label>
                                                    <Select id="route" name="route">
                                                        {routes_options.map((option) => 
                                                            <option value={option.id}>{option.name}</option>
                                                        )}
                                                    </Select>
                                                </FixedFluid>
                                            </VerticalCenter>

                                            <VerticalCenter>
                                                <FixedFluid class="[ w-full items-center ]" gap="var(--space-3xs)" width="250px" breakpoint="60%">
                                                    <label for="contract_size">{t('contract_size')} (<span class="[ lowercase ]">m<sup>3</sup></span>)</label>
                                                    <Select id="contract_size" name="contract_size">
                                                        {sizes_options.map((option) => 
                                                            <option value={option.id}>{option.name}</option>
                                                        )}
                                                    </Select>
                                                </FixedFluid>
                                            </VerticalCenter>

                                            <VerticalCenter>
                                                <FixedFluid class="[ w-full items-center ]" gap="var(--space-3xs)" width="250px" breakpoint="60%">
                                                    <label for="collateral">{t('collateral')}</label>
                                                    <Input
                                                        id="collateral"
                                                        type="text"
                                                        placeholder="0.00"
                                                        onclick="this.select();"
                                                        data-tippy-content=""
                                                        x-mask:dynamic="$money($input)"
                                                        x-data={`{ collateral: '0.00' }`}
                                                        x-model="collateral"
                                                        x-bind:data-tippy-content={`number_name(collateral, '${lang}')`}
                                                        onkeyup={`this._tippy.setContent(this.getAttribute('data-tippy-content'), '${lang}')`}
                                                        data-tippy-placement='top'
                                                        name="collateral"
                                                    />
                                                </FixedFluid>
                                            </VerticalCenter>
                                        </Flexblock>

                                        <Button type="submit" class="[ w-full ]">{t('calculate')}</Button>
                                    </Flexblock>
                                </form>
                            </ComponentBlock>
                        </Flexblock>
                    </Flexblock>
                </Wrapper>

                <Wrapper max_width="var(--max-text-width)" padding_inline="0" padding_block="0">
                    <ComponentBlock>
                        <Flexblock>
                            <FixedFluid width="48" class="[ items-center ]">
                                <TutorialIcon />
                                <h2>{t('freight.standard.faq_title')}</h2>
                            </FixedFluid>
                            <h3>{t('freight.standard.faq_1_title')}</h3>
                            <p>{t('freight.standard.faq_1_text')}</p>
                            <h3>{t('freight.standard.faq_2_title')}</h3>
                            <p>{t('freight.standard.faq_2_text')}</p>
                            <h3>{t('freight.standard.faq_3_title')}</h3>
                            <p>{t('freight.standard.faq_3_text')}</p>
                        </Flexblock>
                    </ComponentBlock>
                </Wrapper>
            </FixedFluid>
        </PageBody>
	</main>
</Viewport>

<style lang="scss">
    h3 {
        margin-block-start: var(--space-l);
    }
</style>